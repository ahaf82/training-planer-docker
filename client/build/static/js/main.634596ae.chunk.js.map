{"version":3,"sources":["Logo.png","context/auth/authContext.js","context/trainingGroup/trainingGroupContext.js","context/trainingSession/trainingSessionContext.js","components/layout/Navbar.js","context/member/memberContext.js","components/trainingSessions/TrainingSessionItem.js","components/layout/Spinner.js","components/trainingSessions/TrainingSessions.js","components/trainingSessions/HomeSessionItem.js","components/trainingSessions/HomeSessions.js","components/trainingSessions/TrainingSessionFilter.js","components/trainingSessions/TrainingGroupOptions.js","components/pushNotes/pushNotes.js","components/pushNotes/pushNoteAd.js","components/pages/Home.js","components/pages/Messages.js","components/member/MemberItem.js","components/member/Members.js","components/member/MemberForm.js","context/alert/alertContext.js","components/member/EditOwnData.js","components/member/MemberFilter.js","components/pages/MemberPage.js","components/trainingGroups/TrainingGroupItem.js","components/trainingGroups/TrainingGroups.js","components/trainingGroups/TrainingGroupForm.js","components/trainingGroups/TrainingGroupFilter.js","components/pages/Groups.js","components/trainingSessions/TrainerOptions.js","components/trainingSessions/TrainingSessionForm.js","components/pages/Sessions.js","components/trainingSessions/OldSessionItem.js","components/trainingSessions/ExportCSV.js","components/trainingSessions/OldSessions.js","components/pages/About.js","components/auth/Register.js","components/auth/Login.js","components/layout/Alerts.js","components/member/TrainingGroupListModal.js","components/member/ClearModalMember.js","components/trainingGroups/ClearModalGroup.js","components/trainingSessions/ClearModalSession.js","components/auth/ResetPassword.js","components/auth/NewPassword.js","components/routing/PrivateRoute.js","context/types.js","context/trainingGroup/trainingGroupReducer.js","context/trainingGroup/TrainingGroupState.js","context/trainingSession/trainingSessionReducer.js","context/trainingSession/TrainingSessionState.js","context/member/memberReducer.js","context/member/MemberState.js","context/auth/authReducer.js","utils/setAuthToken.js","context/auth/AuthState.js","context/alert/alertReducer.js","context/alert/AlertState.js","App.js","serviceWorker.js","index.js"],"names":["AuthContext","createContext","TrainingGroupContext","TrainingSessionContext","Navbar","title","authContext","icon","useContext","trainingGroupContext","trainingSessionContext","isAuthenticated","logout","member","role","clearTrainingGroups","clearTrainingSessions","authLinks","to","className","aria-hidden","name","onClick","href","guestLinks","src","Logo","defaultProps","MemberContext","Moment","globalLocale","TrainingSessionItem","session","checkIn","loading","setCurrent","getTrainingSessions","deleteTrainingSession","updateTrainingSession","clearCurrent","trainingGroup","memberContext","getTrainingGroups","description","getMembers","_id","maxMembers","memberCount","members","time","timeTo","date","group","undefined","filter","item","useState","checked","setChecked","useEffect","console","log","find","element","sessionMembers","trainerName","sessionSubMembers","familyMember","length","map","flat","obj","includes","trainer","format","class","join","data-target","type","value","id","onChange","e","preventDefault","M","toast","html","classes","displayLength","disabled","TrainingSession","trainingSessions","filtered","chosenMember","setMember","setChosenMember","tGroup","tSession","moment","Date","now","users","target","Spinner","TransitionGroup","CSSTransition","timeout","classNames","HomeSessionItem","HomeSessions","TrainingSessionFilter","filterTrainingSessions","clearFilter","text","useRef","current","ref","placeholder","TrainingGroupOptions","PushNote","updateMember","email","pushData","setPushData","urlBase64ToUint8Array","base64String","base64","repeat","replace","rawData","window","atob","outputArray","Uint8Array","i","charCodeAt","a","devices","unsubscribe","navigator","serviceWorker","ready","then","registration","pushManager","getSubscription","safari","pushNotification","subscription","endpoint","register","sw","subscribe","userVisibleOnly","applicationServerKey","publicVapidKey","subscribeData","keys","p256dh","toJSON","auth","updMember","unsubscribeMember","start","process","memb","payload","fetch","method","body","JSON","stringify","headers","variant","send","PushNoteAd","Home","props","loadMember","columns","activeMonth","daysOfWeek","onSelect","actualDate","Messages","MemberItem","deleteMember","groups","Set","Member","subuser","MemberForm","checkedTrainer","setCheckedTrainer","onSubmit","alertContext","EditOwnData","AlertContext","setAlert","newMember","setNewMember","htmlFor","subUser","deleteSubuser","MemberFilter","filterMembers","TrainingGroupItem","groupMembers","deleteTrainingGroup","subMembers","groupSubMembers","TrainingGroups","TrainingGroupForm","addTrainingGroup","updateTrainingGroup","setTrainingGroup","TrainingGroupFilter","filterTrainingGroups","Groups","TrainerOptions","TrainingSessionForm","addTrainingSession","setTrainingSession","trainingSession","selected","Sessions","OldSessionItem","ExportCSV","csvData","fileName","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","data","Blob","FileSaver","exportToCSV","OldSessions","today","exportGroup","Datum","Zeit","Trainer","Trainingseinheit","Teilnehmer","exportMembers","train","sessionTime","trainArray","About","Register","error","clearErrors","history","push","password","password2","Login","login","Alerts","alerts","alert","msg","TrainingGroupListModal","ClearModalMember","location","reload","ClearModalGroup","ClearModalSession","ResetPassword","resetPassword","useHistory","NewPassword","newPassword","token","search","split","PrivateRoute","Component","component","rest","render","GET_TRAININGGROUPS","ADD_TRAININGGROUP","UPDATE_TRAININGGROUP","FILTER_TRAININGGROUPS","CLEAR_TRAININGGROUPS","DELETE_TRAININGGROUP","GET_MEMBERS","ADD_MEMBER","UPDATE_MEMBER","FILTER_MEMBERS","CLEAR_MEMBERS","DELETE_MEMBER","GET_TRAININGSESSIONS","ADD_TRAININGSESSION","UPDATE_TRAININGSESSION","FILTER_TRAININGSESSIONS","CLEAR_TRAININGSESSIONS","DELETE_TRAININGSESSION","SET_CURRENT","TRAININGSESSION_ERROR","TRAININGGROUP_ERROR","MEMBER_ERROR","CLEAR_CURRENT","CLEAR_ERRORS","CLEAR_FILTER","SET_ALERT","REMOVE_ALERT","REGISTER_SUCCESS","REGISTER_FAIL","RESET_PASSWORD","NEW_PASSWORD","MEMBER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","state","action","regex","RegExp","match","TrainingGroupState","useReducer","trainingGroupReducer","dispatch","axios","get","res","response","config","post","delete","put","Provider","children","regexSession","TrainingSessionState","trainingSessionReducer","regexMember","MemberState","memberReducer","addMember","clearMembers","localStorage","setItem","removeItem","setAuthToken","defaults","common","AuthState","initialState","getItem","authReducer","formData","url","origin","AlertState","alertReducer","uuid","v4","setTimeout","App","AutoInit","exact","path","MemberPage","isLocalhost","Boolean","hostname","registerValidSW","swUrl","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","StrictMode","document","getElementById","URL","addEventListener","contentType","status","indexOf","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.634596ae.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Logo.d373205c.png\";","import { createContext } from 'react';\n\nconst AuthContext = createContext();\n\nexport default AuthContext;\n","import { createContext } from 'react';\n\nconst TrainingGroupContext = createContext();\n\nexport default TrainingGroupContext;","import { createContext } from 'react';\n\nconst TrainingSessionContext = createContext();\n\nexport default TrainingSessionContext;","import React, { Fragment, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Logo from '../../Logo.png';\nimport AuthContext from '../../context/auth/authContext';\nimport TrainingGroupContext from '../../context/trainingGroup/trainingGroupContext';\nimport TrainingSessionContext from '../../context/trainingSession/trainingSessionContext';\n\nconst Navbar = ({ title, icon }) => {\n    const authContext = useContext(AuthContext);\n    const trainingGroupContext = useContext(TrainingGroupContext);\n    const trainingSessionContext = useContext(TrainingSessionContext);\n\n    const { isAuthenticated, logout, member, role } = authContext;\n    const { clearTrainingGroups } = trainingGroupContext;\n    const { clearTrainingSessions } = trainingSessionContext;\n\n    const onLogout = () => {\n        logout();\n        clearTrainingGroups();\n        clearTrainingSessions();\n    };\n\n    const authLinks = (\n        <Fragment>\n            <li>\n                <Link to='/'><i className=\"fa fa-list-alt\" aria-hidden=\"true\"></i><span className=\"hide-sm\"> Übersicht</span></Link>\n            </li>\n            {(role === 'admin' || role === 'superUser') &&\n                <li>\n                    <Link to='/sessions'><i className=\"fa fa-calendar\" aria-hidden=\"true\"></i><span className=\"hide-sm\"> Trainingseinheiten</span></Link>\n                </li>}\n            {(role === 'admin' || role === 'superUser') &&\n                <li>\n                    <Link to='/groups'><i className=\"fa fa-users\" aria-hidden=\"true\"></i><span className=\"hide-sm\"> Trainingsgruppen</span></Link>\n                </li>}\n            {(role === 'admin' || role === 'superUser') &&\n            <li>\n                <Link to='/messages'><i className=\"fa fa-envelope-open-text\" aria-hidden=\"true\"></i><span className=\"hide-sm\"> Nachrichten</span></Link>\n            </li>}\n            {/* {(role === 'admin' || role === 'superUser') &&\n            <li>\n                <Link to='/memberPage'><i className=\"fa fa-user-circle\" aria-hidden=\"true\"></i><span className=\"hide-sm\"> Mitglieder</span></Link>\n            </li>} */}\n            <li>\n                <Link to='/memberPage'><i className=\"fa fa-user-circle\" aria-hidden=\"true\"></i><span className=\"hide-sm\"> Mitglieder</span></Link>\n            </li>\n            {(role === 'admin' || role === 'superUser') &&\n                <li>\n                    <Link to='/oldSess'><i className=\"fa fa-reply-all\" aria-hidden=\"true\"></i><span className=\"hide-sm\"> Alte Einträge</span></Link>\n                </li>}\n\n            {role === 'member' &&\n                <li>\n                    Hallo {member && member.name}\n                </li>}\n            <li>\n                <a onClick={onLogout} href=\"#!\">\n                    <i className=\"fas fa-sign-out-alt\"></i><span className=\"hide-sm\"> Logout</span>\n                </a>\n            </li>\n        </Fragment>\n    )\n\n    const guestLinks = (\n        <Fragment>\n            {/* {<li>\n                <Link to='/policy'>DSGVO</Link>\n            </li> */}\n            <li>\n                <Link to='/register'>Registrierung</Link>\n            </li>\n            <li>\n                <Link to='/login'>Login</Link>\n            </li>\n        </Fragment>\n    )\n\n    return (\n        <div className=\"navbar bg-primary middle\">\n            <h1 className=\"text-light-color x-large\">\n                <img src={Logo} className='kentai-logo' /> {title}\n            </h1>\n            <ul>\n                {isAuthenticated ? authLinks : guestLinks}\n            </ul>\n        </div>\n    )\n}\n\nNavbar.propTypes = {\n    title: PropTypes.string.isRequired,\n    icon: PropTypes.string\n}\n\nNavbar.defaultProps = {\n    title: 'Training Planer'\n    // icon: 'fa fa-calendar'\n}\n\nexport default Navbar;","import { createContext } from 'react';\n\nconst MemberContext = createContext();\n\nexport default MemberContext;","import React, { useContext, useState, useEffect } from 'react'; \nimport Moment from 'react-moment';\nimport 'moment/locale/de';\nimport PropTypes from 'prop-types';\nimport AuthContext from '../../context/auth/authContext';\nimport MemberContext from '../../context/member/memberContext';\nimport TrainingGroupContext from '../../context/trainingGroup/trainingGroupContext';\nimport TrainingSessionContext from '../../context/trainingSession/trainingSessionContext';\nimport M from 'materialize-css/dist/js/materialize.min.js';\n\n\nMoment.globalLocale = 'de';\n\nconst TrainingSessionItem = ({ session, checkIn }) => {\n    const authContext = useContext(AuthContext);\n    const { role, loading } = authContext;\n\n    const trainingSessionContext = useContext(TrainingSessionContext);\n    const { getTrainingSessions, deleteTrainingSession, setCurrent, clearCurrent, updateTrainingSession } = trainingSessionContext;\n\n    const trainingGroupContext = useContext(TrainingGroupContext);\n    const { trainingGroup, getTrainingGroups } = trainingGroupContext;\n\n    const memberContext = useContext(MemberContext);\n    const { getMembers } = memberContext;\n    \n    const { _id, description, maxMembers, memberCount, members, time, timeTo, date } = session;\n\n    let group =[];\n    if (trainingGroup != undefined) {\n        group = trainingGroup.filter(item => item._id === session.trainingGroup);\n    } \n\n    // const [checkInMember, setCheckInMember] = useState({\n    //     _id: checkIn._id,\n    //     name: checkIn.name\n    // })\n    \n    const onDelete = () => {\n        deleteTrainingSession(_id);\n        clearCurrent();\n    }\n    \n    const [checked, setChecked] = useState(false);\n    \n    useEffect(() => {\n        // if (session.members.find(element => element === authContext.member._id) !== undefined) {\n        if (checkIn.name) checkIn = checkIn._id\n        console.log(\"checkIn\", checkIn);\n        // console.log(\"itemmember\", checkInMember)\n        // setCheckInMember(checkInMember);\n        // console.log(\"checkIn\", checkInMember);\n        // if (session.members.find(element => element === checkInMember._id) !== undefined) {\n        setChecked(false);\n        if (session.members.find(element => element === checkIn) !== undefined) {\n            setChecked(true);\n        }\n//    }, [authContext.member._id, getMembers, getTrainingGroups, getTrainingSessions, session.members]);\n//    }, [checkIn, checkInMember, session.members]);\n    }, [checkIn, session.members]);\n\n    // Check In and Out in Training Session\n    const onChange = (e) => {\n        e.preventDefault();\n        setChecked(!checked);\n        if (maxMembers && !checked && (memberCount >= maxMembers)) {\n            M.toast({ html: 'Kein Platz mehr frei', classes: 'red darken-2', displayLength: 1500 });\n        }\n        if (!checked && (memberCount < maxMembers || !maxMembers)) {\n            // updateTrainingSession({ ...session, members: [...members, authContext.member._id], memberCount: memberCount+1 });\n            // updateTrainingSession({ ...session, members: [...members, checkInMember._id], memberCount: memberCount+1 });\n            updateTrainingSession({ ...session, members: [...members, checkIn], memberCount: memberCount+1 });\n        }\n        if (checked) {\n            if (memberCount === 1) {\n                // updateTrainingSession({ ...session, members: members.filter(item => item !== authContext.member._id), memberCount: \"0\" });\n                // updateTrainingSession({ ...session, members: members.filter(item => item !== checkInMember._id), memberCount: \"0\" });\n                updateTrainingSession({ ...session, members: members.filter(item => item !== checkIn), memberCount: \"0\" });\n            } else {\n                // updateTrainingSession({ ...session, members: members.filter(item => item !== authContext.member._id), memberCount: memberCount-1 });\n                // updateTrainingSession({ ...session, members: members.filter(item => item !== checkInMember._id), memberCount: memberCount-1 });\n                if ((memberCount-1)>=0) updateTrainingSession({ ...session, members: members.filter(item => item !== checkIn), memberCount: memberCount-1 });\n                if ((memberCount-1)<0) updateTrainingSession({ ...session, members: members.filter(item => item !== checkIn), memberCount: memberCount });\n            }\n        }\n    }\n    \n    // Convert ObjectMember Id to Name\n    let sessionMembers;\n    if (memberContext.members) {\n        // console.log(\"context\", memberContext.members);\n        let subMembers = [ ...memberContext.members.filter(element => element.familyMember.length > 0).map(element => element.familyMember).flat(1) ];\n        // console.log(\"subs\", subMembers);\n        let sessionSubMembers = subMembers.filter(obj => session.members.includes(obj._id));\n        // console.log(\"groupsubs\", sessionSubMembers);\n        sessionMembers = [ ...memberContext.members.filter(element => session.members.includes(element._id)), ...sessionSubMembers ];        \n        // sessionMembers = [...new Set(memberContext.members.filter(element => session.members.includes(element._id)))];\n    }\n\n    // Convert ObjectTrainer Id to Name\n    let trainerName;\n    if (memberContext.members && session.trainer) {\n        trainerName = memberContext.members.filter(element => element._id === session.trainer);\n    }\n\n    return (\n        <div className='column'>\n            <div className={checked === true ? 'card bg-dark card-content' : 'card bg-light card-content'}>\n                <h3 className={checked === true ? 'text- text-left large' : 'text-dark text-left large'}>\n                    {description}{' '} \n                </h3>\n                <ul className=\"list\">\n                    {trainingGroup && group[0] && group[0].trainingGroup && !loading && <li>\n                        <i></i> Trainingsgruppe: {group[0].trainingGroup\n                    }\n                    </li>}                    \n                    {memberContext.members && trainerName && !loading && <li>\n                        <i></i> Trainer: {trainerName[0].name}\n                    </li>}\n                    {time && <li>\n                        <i></i> Zeit: <time format='h:mm:ss'>{time}</time>{timeTo && <time format='h:mm:ss'>{` - ${timeTo}`}</time>}\n                    </li>}\n                    {date && <li>\n                        <i></i> Datum: <Moment format='Do MMMM YYYY'>{date}</Moment>\n                    </li>}\n                    {maxMembers && <li>\n                        <i></i> Maximale Teilnehmer: {maxMembers}\n                    </li>}\n                    {memberCount && <li>\n                        <i></i> Angemeldete Teilnehmer: {memberCount}\n                    </li>}\n                    {(role === 'admin' || role === 'superUser' ) && sessionMembers && <div>\n                        <i class=\"fa fa-user\"></i> <bold>Teilnehmer:</bold> <br/>\n                                {sessionMembers.map(member => member.name).join(', ')}\n                    </div>}\n                </ul>\n                {(role === 'admin' || role === 'superUser') &&  <p>\n                    <button className=\"btn btn-dark btn-sm\" onClick={() => setCurrent(session)}>Ändern</button>\n                    <button data-target=\"clear-modal-session\" class=\"btn btn-danger btn-sm modal-trigger\" onClick={() => setCurrent(session)}>Löschen</button>\n                 </p>}\n                {(role === \"member\" || role === \"admin\" || role === \"trainer\")&&\n                    <div class=\"switch\">\n                    <p>\n                        <label>\n                            Check Out\n                            <input type=\"checkbox\" key={session._id} className=\"filled-in\" name={session._id} value={session.id} checked={checked} onChange={e => onChange(e, session._id)} disabled={maxMembers && !checked && (memberCount >= maxMembers)}/>\n                            <span class=\"lever\"></span>\n                            Check In\n                        </label>\n                    </p>\n                </div>}\n            </div>\n        </div>\n    )\n}\n\nTrainingSessionItem.propTypes = {\n    session: PropTypes.object.isRequired\n}\n\nexport default TrainingSessionItem;","import React, { Fragment } from 'react';\n\nexport default () => (\n    <Fragment>\n        <div className=\"preloader-wrapper big active\">\n            <div className=\"spinner-layer spinner-blue\">\n                <div className=\"circle-clipper left\">\n                    <div className=\"circle\"></div>\n                </div><div className=\"gap-patch\">\n                    <div className=\"circle\"></div>\n                </div><div className=\"circle-clipper right\">\n                    <div className=\"circle\"></div>\n                </div>\n            </div>\n        </div>\n    </Fragment>\n); \n","import React, { Fragment, useContext, useEffect, useState } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport TrainingSessionItem from './TrainingSessionItem';\nimport Spinner from '../layout/Spinner';\nimport moment from 'moment'\nimport AuthContext from '../../context/auth/authContext';\nimport TrainingSessionContext from '../../context/trainingSession/trainingSessionContext';\nimport MemberContext from '../../context/member/memberContext';\n\nconst TrainingSession = () => {\n    const authContext = useContext(AuthContext);\n    const { role } = authContext;\n\n    const trainingSessionContext = useContext(TrainingSessionContext);\n    const { trainingSessions, filtered, getTrainingSessions, loading } = trainingSessionContext;\n\n    const memberContext = useContext(MemberContext);\n    const { _id } = memberContext;\n\n    useEffect(() => {\n        console.log(\"membbegin\", member);\n        console.log(\"chosenbegin\", chosenMember);\n        getTrainingSessions();\n        setMember(chosenMember);\n        // eslint-disable-next-line\n    }, []);\n\n    let [member, setMember] = useState({\n        _id: authContext.member._id,\n        name: authContext.member._id,\n        role: authContext.member.role,\n        trainingGroup: authContext.member.trainingGroup,\n        trainingSessions: authContext.member.trainingSessions\n    });\n\n    let [chosenMember, setChosenMember] = useState({\n        _id: authContext.member._id,\n        name: authContext.member._id,\n        role: authContext.member.role,\n        trainingGroup: authContext.member.trainingGroup,\n        trainingSessions: authContext.member.trainingSessions\n    });\n\n    const onChange = e => {\n        setMember(e.target.value);\n\n        // chosenMember = users.filter(item => item._id === e.target.value)[0];\n        setChosenMember(users.filter(item => item._id === e.target.value)[0]);\n\n        // setMember(chosenMember);\n        console.log(\"chosenMember\", chosenMember);\n        console.log(\"member\", member);\n    }\n    \n    if (trainingSessions !== null && trainingSessions.length === 0 && !loading && (role === 'admin' || role === 'superUser')) {\n        return <h4>Bitte füge eine Trainingseinheit hinzu:</h4>\n    }\n\n    let tGroup = []\n    if (trainingSessions && (role === 'admin' || role === 'superUser')) {\n        tGroup = trainingSessions.filter(tSession => tSession.date >= moment(Date.now()).format('YYYY-MM-DD'));\n    }\n    \n    // let chosenMember = authContext.member;\n    // filter sessions for member\n    if (trainingSessions && (role === 'member' || role === 'trainer')) {\n        // tGroup = trainingSessions.filter(tSession => authContext.member.trainingGroup.find((tGroup) => tGroup === tSession.trainingGroup) !== undefined);\n        tGroup = trainingSessions.filter(tSession => chosenMember.trainingGroup.find((tGroup) => tGroup === tSession.trainingGroup) !== undefined);\n        tGroup = tGroup.filter(tSession => tSession.date >= moment(Date.now()).format('YYYY-MM-DD'));\n    }\n\n    let users = [ authContext.member, ...authContext.member.familyMember ];\n\n    // let chosenMember = users.filter(item => item._id === member)[0];\n\n    return (\n        <Fragment>\n            <div className=\"column card bg-light\">                \n                <div className=\"input-field\">\n                    <select value={_id} name=\"member\" className=\"browser-default\" onChange={onChange}>\n                            {users.map(item => <option key={item._id} value={item._id}> {item.name}</option>)}\n                    </select>\n                </div>\n            </div>\n            {tGroup !== null && !loading ? (\n                <TransitionGroup>\n                {filtered !== null \n                ? filtered.map(session => (\n                    <CSSTransition key={session._id} timeout={300} classNames=\"item\">\n                    <TrainingSessionItem session={session} checkIn={member} />\n                    </CSSTransition>\n                )) \n                : tGroup.map(session => ( \n                    <CSSTransition key={session._id} timeout={300} classNames=\"item\">\n                    <TrainingSessionItem session={session} checkIn={member} />\n                    </CSSTransition>\n                ))}\n                </TransitionGroup>\n                ) : <Spinner />}\n        </Fragment>\n    )\n}\n\nexport default TrainingSession;","import React, { useContext, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\nimport 'moment/locale/de';\nimport AuthContext from '../../context/auth/authContext';\nimport MemberContext from '../../context/member/memberContext';\nimport TrainingGroupContext from '../../context/trainingGroup/trainingGroupContext';\n\nMoment.globalLocale = 'de';\n\nconst HomeSessionItem = ({ session }) => {\n    const authContext = useContext(AuthContext);\n    const { role, loading } = authContext;\n\n    const trainingGroupContext = useContext(TrainingGroupContext);\n    const { trainingGroup } = trainingGroupContext;\n\n    const memberContext = useContext(MemberContext);\n\n    const { description, maxMembers, memberCount, members, time, timeTo, date } = session;\n\n    let group = [];\n    if (trainingGroup) {\n        group = trainingGroup.filter(item => item._id === session.trainingGroup);\n    }\n\n    const [checked, setChecked] = useState(false);\n\n    useEffect(() => {\n        if (session.members.find(element => element === authContext.member._id) !== undefined) {\n            setChecked(true);\n        }\n    }, [session.members, authContext.member._id, members]);\n\n    // Convert Object Id to Name\n    let sessionMembers;\n    if (memberContext.members) {\n        // console.log(\"context\", memberContext.members);\n        let subMembers = [ ...memberContext.members.filter(element => element.familyMember.length > 0).map(element => element.familyMember).flat(1) ];\n        // console.log(\"subs\", subMembers);\n        let sessionSubMembers = subMembers.filter(obj => session.members.includes(obj._id));\n        // console.log(\"groupsubs\", sessionSubMembers);\n        sessionMembers = [ ...memberContext.members.filter(element => session.members.includes(element._id)), ...sessionSubMembers ];\n        // sessionMembers = [...new Set(memberContext.members.filter(element => session.members.includes(element._id)))];\n        // sessionMembers = [...new Set(sessionMembers)];\n    }\n\n    // Convert ObjectTrainer Id to Name\n    let trainerName;\n    if (memberContext.members && session.trainer) {\n        trainerName = memberContext.members.filter(element => element._id === session.trainer);\n    }\n\n    return (\n        <div className='column'>\n\n            <div className={checked === true ? 'card bg-primary' : 'card bg-light card-content'}>\n                <h3 className={checked === true ? 'text- text-left large' : 'text-primary text-left large'}>\n                  \n                    {description}{' '}\n                </h3>\n                <ul className=\"list\">\n                    {trainingGroup && group[0].trainingGroup && !loading && <li>\n                        <i></i> Trainingsgruppe: {group[0].trainingGroup\n                        }\n                    </li>}                    \n                    {memberContext.members && trainerName && !loading && <li>\n                        <i></i> Trainer: {trainerName[0].name}\n                    </li>}\n                    {time && <li>\n                        <i></i> Zeit: <time format='h:mm:ss'>{time}</time>{timeTo && <time format='h:mm:ss'>{` - ${timeTo}`}</time>}\n                    </li>}\n                    {date && <li>\n                        <i></i> Datum: <Moment format='Do MMMM YYYY'>{date}</Moment>\n                    </li>}\n                    {maxMembers && <li>\n                        <i></i> Maximale Teilnehmer: {maxMembers}\n                    </li>}\n                    {memberCount && <li>\n                        <i></i> Angemeldete Teilnehmer: {memberCount}\n                    </li>}\n                    {(role === 'admin' || role === 'superUser') && sessionMembers && <div>\n                        <i className=\"fa fa-user\"></i> <strong>Teilnehmer:</strong> <br/>\n                        {sessionMembers.map(member => member.name).join(', ')}\n                    </div>}\n                </ul>\n            </div>\n        </div>\n    )\n}\n\nHomeSessionItem.propTypes = {\n    session: PropTypes.object.isRequired\n}\n\nexport default HomeSessionItem;","import React, { Fragment, useContext, useEffect } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport HomeSessionItem from './HomeSessionItem';\nimport Spinner from '../layout/Spinner';\nimport moment from 'moment'\nimport AuthContext from '../../context/auth/authContext';\nimport TrainingSessionContext from '../../context/trainingSession/trainingSessionContext';\n\nconst HomeSessions = () => {\n    const authContext = useContext(AuthContext);\n    const { role } = authContext;\n\n    const trainingSessionContext = useContext(TrainingSessionContext);\n    const { trainingSessions, filtered, getTrainingSessions, loading } = trainingSessionContext;\n\n    useEffect(() => {\n        getTrainingSessions();\n        // eslint-disable-next-line\n    }, []);\n\n    if (trainingSessions !== null && trainingSessions.length === 0 && !loading && (role === 'admin' || role === 'superUser')) {\n        return <h4>Bitte füge eine Trainingseinheit hinzu:</h4>\n    }\n\n    let tGroup = []\n    if (trainingSessions && (role === 'admin' || role === 'superUser')) {\n        tGroup = trainingSessions.filter(tSession => tSession.date >= moment(Date.now()).format('YYYY-MM-DD'));\n    }\n\n    // filter sessions for member\n    if (trainingSessions && role === 'member') {\n        tGroup = trainingSessions.filter(tSession => authContext.member.trainingGroup.find((tGroup) => tGroup === tSession.trainingGroup) !== undefined);\n        tGroup = tGroup.filter(tSession => tSession.date >= moment(Date.now()).format('YYYY-MM-DD'));\n    }\n\n    return (\n        <Fragment>\n            {tGroup !== null && !loading ? (\n                <TransitionGroup>\n                    {filtered !== null\n                        ? filtered.map(session => (\n                            <CSSTransition key={session._id} timeout={300} classNames=\"item\">\n                                <HomeSessionItem session={session} />\n                            </CSSTransition>\n                        ))\n                        : tGroup.map(session => (\n                            <CSSTransition key={session._id} timeout={300} classNames=\"item\">\n                                <HomeSessionItem session={session} />\n                            </CSSTransition>\n                        ))}\n                </TransitionGroup>\n            ) : <Spinner />}\n        </Fragment>\n    )\n}\n\nexport default HomeSessions;","import React, { useContext, useRef, useEffect } from 'react';\nimport AuthContext from '../../context/auth/authContext';\nimport TrainingSessionContext from '../../context/trainingSession/trainingSessionContext'\n\nconst TrainingSessionFilter = () => {\n    const authContext = useContext(AuthContext);\n    const { role } = authContext;\n\n    const trainingSessionContext = useContext(TrainingSessionContext);\n    const { filterTrainingSessions, clearFilter, filtered } = trainingSessionContext;\n\n    const text = useRef('');\n\n\n    useEffect(() => {\n        if (role === ('admin' || 'superUser' || 'member') && filtered === null) {\n            text.current.value = '';\n        }\n    });\n    \n    const onChange = e => {\n        if (text.current.value !== '') {\n            filterTrainingSessions(e.target.value);\n        } else {\n            clearFilter();\n        }\n    }\n    \n    return (\n        <form>\n            <input ref={text} type=\"text\" placeholder=\"Suche Trainingseinheit...\" onChange={onChange} />\n        </form>\n    )\n}\n\nexport default TrainingSessionFilter;","import React, { useEffect, useContext } from 'react';\nimport TrainingGroupContext from '../../context/trainingGroup/trainingGroupContext';\n\nconst TrainingGroupOptions = () => {\n    const trainingGroupContext = useContext(TrainingGroupContext);\n    const { trainingGroup, getTrainingGroups, loading } = trainingGroupContext;\n\n    useEffect(() => {\n        getTrainingGroups();\n        // eslint-disable-next-line\n    }, []);\n\n    return (\n        !loading && trainingGroup !== null && trainingGroup.map(group => (<option key={group._id} value={group._id} >\n            {group.trainingGroup}\n        </option>))\n    )\n}\n\nexport default TrainingGroupOptions;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport AuthContext from '../../context/auth/authContext';\nimport TrainingGroupContext from '../../context/trainingGroup/trainingGroupContext';\nimport MemberContext from '../../context/member/memberContext';\nimport TrainingGroupOptions from '../trainingSessions/TrainingGroupOptions';\nimport M from 'materialize-css/dist/js/materialize.min.js';\n\nconst PushNote = () => {\n    const authContext = useContext(AuthContext);\n    const { member } = authContext;\n    \n    const memberContext = useContext(MemberContext);\n    const { updateMember, members } = memberContext; \n\n    const trainingGroupContext = useContext(TrainingGroupContext);\n    \n    const { _id, name, email, role } = member;\n    \n    const [pushData, setPushData] = useState('');\n    \n    const onChangeInput = e => setPushData(e.target.value);\n\n    const [trainingGroup, setTrainingGroup] = useState('');\n    const onChangeGroup = e => setTrainingGroup({ trainingGroup: e.target.value });\n    \n    const [checked, setChecked] = useState(false);\n\n    const subsTrue = false;\n\n    useEffect(() => {\n        start();\n    }, []);\n\n    function urlBase64ToUint8Array(base64String) {\n        const padding = \"=\".repeat((4 - base64String.length % 4) % 4);\n        const base64 = (base64String + padding)\n        .replace(/\\-/g, \"+\")\n        .replace(/_/g, \"/\");\n        \n        const rawData = window.atob(base64);\n        const outputArray = new Uint8Array(rawData.length);\n        \n        for (let i = 0; i < rawData.length; ++i) {\n            outputArray[i] = rawData.charCodeAt(i);\n        }\n        return outputArray;\n    }\n\n    async function start() {\n        if ((member.devices.length > 0) && unsubscribe !== null) {\n            navigator.serviceWorker.ready\n                .then(function (registration) {\n                    if (!!registration.pushManager) {\n                        return registration.pushManager.getSubscription();\n                    }\n                    return registration.safari.pushNotification()\n                }).then(function (subscription) {\n                    if (subscription && member.devices.filter(item => item.endpoint === subscription.endpoint) !== '') {\n                        console.log('true');\n                        setChecked(true);\n                    }\n                });\n            }\n        }\n\n    async function subscribe() {\n        const register = await navigator.serviceWorker.register(`/custom-sw.js`);\n\n        console.log(\"reg\", register)\n        const sw = await navigator.serviceWorker.ready;\n\n        // Register Push\n        console.log(\"Registering Push...\", _id, email);\n        console.log(\"service worker\", sw);\n        console.log(\"reg\", register);\n        let subscription;\n        if (!!sw.pushManager) {\n            subscription = await sw.pushManager.subscribe({\n                userVisibleOnly: true,\n                applicationServerKey: urlBase64ToUint8Array(publicVapidKey)\n            });\n        } else {\n            console.log(\"sw\", sw)\n            subscription = await sw.safari.pushNotification({\n                userVisibleOnly: true,\n                applicationServerKey: urlBase64ToUint8Array(publicVapidKey)\n            })\n        }\n        \n        console.log(\"subscription\");\n        const subscribeData = {\n            endpoint: subscription.endpoint,\n            keys: {\n                p256dh: subscription.toJSON().keys.p256dh,\n                auth: subscription.toJSON().keys.auth\n            }\n        };\n\n        console.log(\"subscribeData\", subscribeData);\n\n        const updMember = {\n            _id,\n            email,\n            devices: [...member.devices, subscribeData]\n        }\n        console.log(\"subscribe member\", updMember)\n\n        if (member.devices.includes(subscription.endpoint) === false) {\n            updateMember(updMember);    \n        }\n    }\n\n    async function unsubscribe() {\n        if ((member.devices.length > 0) && unsubscribe !== null) {\n            navigator.serviceWorker.ready\n                .then(function (registration) {\n                    return registration.pushManager.getSubscription();\n                }).then(function (subscription) {\n                    if (subscription) {\n                    return subscription.unsubscribe()\n                        .then(function () {\n                            const unsubscribeMember = {\n                                _id,\n                                email,\n                                devices: member.devices.filter(element => element.endpoint !== subscription.endpoint)\n                            }\n                            console.log(\"unsubscribe member\", unsubscribeMember)\n                            updateMember(unsubscribeMember);\n                        });\n                    };\n                });\n            }\n    }\n    \n    const onChange = (e) => {\n        e.preventDefault()\n        setChecked(!checked);\n        checked === true ? unsubscribe() : subscribe();\n    }\n    \n    const publicVapidKey = process.env.REACT_APP_VAPID_PUBLIC_KEY;\n    \n    // Register SW, Register Push, Send Push\n    async function send(pushData) {\n        // Send Push Notification\n        console.log(\"Sending Push...\");\n        \n        if (trainingGroup) {\n            console.log(members.filter(memb => memb.trainingGroup.includes(trainingGroup.trainingGroup) || (memb.role === 'admin')));\n            members.filter(memb => (members.filter(memb => memb.trainingGroup.includes(trainingGroup.trainingGroup)) || (memb.role === 'admin'))).map(async function (item) {\n                if (item.devices) {\n                    item.devices.map(async element => {\n                        element.payload = pushData;\n                        console.log('Gesendet');\n                        await fetch(\"/subscribe\", {\n                            method: \"POST\",\n                            body: JSON.stringify(element),\n                            headers: {\n                                \"content-type\": \"application/json\"\n                            }\n                        });\n                        console.log(\"Push Sent...\");\n                    });\n                }\n            });\n        } else {\n            members.map(memb => memb.devices.map(async function(item) {\n                item.payload = pushData;\n                await fetch(\"/subscribe\", {\n                    method: \"POST\",\n                    body: JSON.stringify(item),\n                    headers: {\n                        \"content-type\": \"application/json\"\n                    }\n                });\n                // .then(async response => {\n                //     console.log(\"resp\", response);\n                //     if (response.status === 410) {\n                //         await unsubscribe();\n                //         await subscribe();\n                //         console.log(\"subscription renewed\");\n                //         await fetch(\"/subscribe\", {\n                //             method: \"POST\",\n                //             body: JSON.stringify(item),\n                //             headers: {\n                //                 \"content-type\": \"application/json\"\n                //             }\n                //         })\n                //         .then(async response => {\n                //             console.log(\"resp\", response);\n                //             console.log(\"Push Sent again...\");\n                //         });\n                //     }\n                // })\n                console.log(\"Push Sent...\");\n            }));\n        }\n    }\n\n    return (\n        <div className='column'>\n            {'Notification' in window && navigator.serviceWorker && (role === 'member' || role === 'trainer') &&\n            <div className=\"card bg-light\">\n                Push Benachrichtigungen auf diesem Gerät zulassen:\n                <div class='switch'>\n                    <label>\n                        Nein\n                        <input type=\"checkbox\" name=\"role\" checked={checked} onChange={onChange} />\n                        <span class=\"lever\"></span>\n                                Ja\n                            </label>\n                </div>\n            </div>}\n            {(role === 'admin' || role === 'superUser') &&\n            <div className=\"card bg-light\">\n                {/* {<div className=\"input-field\">\n                    <select name=\"trainingGroup\" key={trainingGroupContext._id} value={trainingGroupContext._id} className=\"browser-default\" onChange={onChangeGroup} defaultValue=\"\">\n                        <option value=\"\" disabled>\n                            Trainingsgruppe...\n                    </option>\n                        <TrainingGroupOptions />\n                    </select>\n                </div>  } */}\n                <input type=\"text\" placeholder=\"Sende Nachricht\" name=\"pushData\" value={pushData} onChange={onChangeInput} /> \n                <button className=\"btn btn-dark btn-sm\" variant=\"warning\" onClick={(e) => send(pushData)}>Sende Push-Nachricht</button> \n            </div> }\n        </div>\n    )\n};\n\nexport default PushNote;","import React, { useState, useContext, useEffect } from \"react\";\nimport AuthContext from '../../context/auth/authContext';\nimport TrainingGroupContext from '../../context/trainingGroup/trainingGroupContext';\nimport MemberContext from '../../context/member/memberContext';\nimport TrainingGroupOptions from '../trainingSessions/TrainingGroupOptions';\nimport M from 'materialize-css/dist/js/materialize.min.js';\n// import { messaging } from \"../../init-fcm\";\n// import { compose, lifecycle, withHandlers, withState } from \"recompose\";\n\nconst PushNoteAd = () => {\n    const authContext = useContext(AuthContext);\n    const { member } = authContext;\n    \n    const memberContext = useContext(MemberContext);\n    const { updateMember, members } = memberContext; \n\n    const trainingGroupContext = useContext(TrainingGroupContext);\n    \n    const { _id, name, email, role } = member;\n    \n    const [pushData, setPushData] = useState('');\n    \n    const onChangeInput = e => setPushData(e.target.value);\n\n    const [trainingGroup, setTrainingGroup] = useState('');\n    const onChangeGroup = e => setTrainingGroup({ trainingGroup: e.target.value });\n    \n    const [checked, setChecked] = useState(false);\n\n    useEffect(() => {\n        start();\n    }, [])\n\n    function urlBase64ToUint8Array(base64String) {\n        const padding = \"=\".repeat((4 - base64String.length % 4) % 4);\n        const base64 = (base64String + padding)\n        .replace(/\\-/g, \"+\")\n        .replace(/_/g, \"/\");\n        \n        const rawData = window.atob(base64);\n        const outputArray = new Uint8Array(rawData.length);\n        \n        for (let i = 0; i < rawData.length; ++i) {\n            outputArray[i] = rawData.charCodeAt(i);\n        }\n        return outputArray;\n    }\n\n    async function start() {\n        if ((member.devices.length > 0) && unsubscribe !== null) {\n            navigator.serviceWorker.ready\n                .then(function (registration) {\n                    return registration.pushManager.getSubscription();\n                }).then(function (subscription) {\n                    if (subscription && member.devices.filter(item => item.endpoint === subscription.endpoint) !== '') {\n                        console.log('true');\n                        setChecked(true);\n                    }\n                });\n        }\n    }\n    \n    async function subscribe() {\n        if (\"serviceWorker\" in navigator) {\n            const register = await navigator.serviceWorker.register(\"/custom-sw.js\");\n            const sw = await navigator.serviceWorker.ready;\n\n            // Register Push\n            const subscription = await sw.pushManager.subscribe({\n                userVisibleOnly: true,\n                applicationServerKey: urlBase64ToUint8Array(publicVapidKey)\n            });\n\n            const subscribeData = {\n                endpoint: subscription.endpoint,\n                keys: {\n                    p256dh: subscription.toJSON().keys.p256dh,\n                    auth: subscription.toJSON().keys.auth\n                }\n            };\n\n            const updMember = {\n                _id,\n                email,\n                devices: [...member.devices, subscribeData]\n            }\n\n            if (member.devices.includes(subscription.endpoint) === false) {\n                updateMember(updMember);\n            }\n\n        }\n    }\n\n    async function unsubscribe() {\n        if ((member.devices.length > 0) && unsubscribe !== null) {\n            navigator.serviceWorker.ready\n                .then(function (registration) {\n                    return registration.pushManager.getSubscription();\n                }).then(function (subscription) {\n                    if (subscription) {\n                    return subscription.unsubscribe()\n                        .then(function () {\n                            const unsubscribeMember = {\n                                _id,\n                                email,\n                                devices: member.devices.filter(element => element.endpoint !== subscription.endpoint)\n                            }\n                            \n                            updateMember(unsubscribeMember);\n                        });\n                    };\n                });\n            }\n    }\n    \n    const onChange = (e) => {\n        e.preventDefault()\n        setChecked(!checked);\n        checked === true ? unsubscribe() : subscribe();\n    }\n    \n    const publicVapidKey = process.env.REACT_APP_VAPID_PUBLIC_KEY;\n\n    return (\n        <div>\n            {'Notification' in window && navigator.serviceWorker && (role === 'admin' || role === 'superUser') &&\n            <div>\n                Push Benachrichtigungen auf diesem Gerät zulassen:\n                <div class='switch'>\n                    <label>\n                        Nein\n                                <input type=\"checkbox\" name=\"role\" checked={checked} onChange={onChange} />\n                        <span class=\"lever\"></span>\n                                Ja\n                            </label>\n                </div>\n            </div>}\n        </div>\n    )\n};\n\nexport default PushNoteAd;","import React, { useContext, useEffect } from 'react';\nimport SimpleReactCalendar from 'simple-react-calendar';\nimport TrainingSession from '../trainingSessions/TrainingSessions';\nimport HomeSessions from '../trainingSessions/HomeSessions';\nimport TrainingSessionFilter from '../trainingSessions/TrainingSessionFilter';\nimport AuthContext from '../../context/auth/authContext';\nimport MemberContext from '../../context/member/memberContext';\nimport TrainingSessionContext from '../../context/trainingSession/trainingSessionContext';\nimport TrainingGroupContext from '../../context/trainingGroup/trainingGroupContext';\nimport PushNote from '../pushNotes/pushNotes';\nimport PushNoteAd from '../pushNotes/pushNoteAd';\n// import request from '../../request';\nimport Moment from 'react-moment';\nimport moment from 'moment';\nimport 'moment/locale/de';\n\nMoment.globalLocale = 'de';\n\nconst Home = props => {\n    const authContext = useContext(AuthContext);\n    const { role } = authContext;\n\n    const memberContext = useContext(MemberContext);\n    const { getMembers } = memberContext;\n\n    const trainingGroupContext = useContext(TrainingGroupContext);\n    const { getTrainingGroups } = trainingGroupContext;\n\n    const trainingSessionContext = useContext(TrainingSessionContext);\n    const { filterTrainingSessions, getTrainingSessions } = trainingSessionContext;\n\n\n    useEffect(() => {\n        authContext.loadMember();\n        getTrainingGroups();\n        getTrainingSessions();\n        getMembers();\n        // eslint-disable-next-line\n    }, []);\n\n    let columns = 0;\n\n    if (role === 'admin' || role === 'superUser') {\n        columns = 3;\n    }\n    if (role === 'member' || role === 'trainer' || role === 'none') {\n        columns = 1;\n    }\n\n    return (\n        <div className={`grid-${columns}`}>\n            <div>\n                <div className='center-cal'>\n                    {(role === 'admin' || role === 'superUser') &&\n\n                        <h4 className=\"text-primary large center\">Trainingseinheiten am:</h4>}\n                        \n                    {(role === 'admin' || role === 'superUser') &&\n                        <SimpleReactCalendar activeMonth={new Date()} daysOfWeek={['Mo', 'Di', 'Mi', 'Do', 'Fr', 'Sa', 'So']} onSelect={(e) => {\n                            const actualDate = moment(e).format('YYYY-MM-DD');\n                            filterTrainingSessions(actualDate);\n                        }} /> }\n                    <br/>\n                    {(role === 'admin' || role === 'superUser') && <TrainingSessionFilter /> }\n                    {(role === 'member' || role === 'trainer') && <TrainingSession /> }\n                    {role === 'none' &&\n                        <h2 className=\"text-primary large\">Melde dich bei deinem Trainer, damit er dich eincheckt</h2>}\n                    {/* {(role === 'member' || role === 'trainer') && <PushNote /> }                     */}\n                    {(role === 'admin' || role === 'superUser') && <PushNoteAd /> }\n                </div>\n            </div>\n            <div className='card-grid-3'>\n                {(role === 'admin' || role === 'superUser') && <h4 className=\"text-dark large center\">Kommende Trainingseinheiten:</h4>}\n                {(role === 'admin' || role === 'superUser') && <HomeSessions /> }\n            </div>\n        </div>\n    )\n}\n\nexport default Home;\n","import React, { useContext, useEffect } from 'react';\nimport SimpleReactCalendar from 'simple-react-calendar';\nimport AuthContext from '../../context/auth/authContext';\nimport MemberContext from '../../context/member/memberContext';\nimport TrainingSessionContext from '../../context/trainingSession/trainingSessionContext';\nimport TrainingGroupContext from '../../context/trainingGroup/trainingGroupContext';\nimport PushNote from '../pushNotes/pushNotes';\nimport PushNoteAd from '../pushNotes/pushNoteAd';\n// import request from '../../request';\nimport Moment from 'react-moment';\nimport moment from 'moment';\nimport 'moment/locale/de';\n\nMoment.globalLocale = 'de';\n\nconst Messages = props => {\n    const authContext = useContext(AuthContext);\n    const { role } = authContext;\n\n    const memberContext = useContext(MemberContext);\n    const { getMembers } = memberContext;\n\n    const trainingGroupContext = useContext(TrainingGroupContext);\n    const { getTrainingGroups } = trainingGroupContext;\n\n    const trainingSessionContext = useContext(TrainingSessionContext);\n    const { filterTrainingSessions, getTrainingSessions } = trainingSessionContext;\n\n\n    useEffect(() => {\n        authContext.loadMember();\n        getTrainingGroups();\n        getTrainingSessions();\n        getMembers();\n        // eslint-disable-next-line\n    }, []);\n\n    let columns = 0;\n\n    if (role === 'admin' || role === 'superUser') {\n        columns = 3;\n    }\n    if (role === 'member' || role === 'trainer' || role === 'none') {\n        columns = 1;\n    }\n\n    return (\n        <div className={`grid-${columns}`}>\n            <div>\n                <div className='center-cal fixed'>\n                    {(role === 'admin' || role === 'superUser') &&\n                        <h4 className=\"text-dark large center\">Trainingseinheiten am:</h4>}\n                    {(role === 'admin' || role === 'superUser') &&\n                        <SimpleReactCalendar activeMonth={new Date()} daysOfWeek={['Mo', 'Di', 'Mi', 'Do', 'Fr', 'Sa', 'So']} onSelect={(e) => {\n                            const actualDate = moment(e).format('YYYY-MM-DD');\n                            filterTrainingSessions(actualDate);\n                        }} /> }\n                    <br/>\n                    {(role === 'member' || role === 'trainer') && <PushNote /> }                    \n                    {(role === 'admin' || role === 'superUser') && <PushNoteAd /> }\n                </div>\n            </div>\n            <div className='card-grid-3'>\n                {(role === 'admin' || role === 'superUser') && <PushNote />}\n            </div>\n        </div>\n    )\n}\n\nexport default Messages;\n","import React, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport MemberContext from '../../context/member/memberContext';\nimport TrainingGroupContext from '../../context/trainingGroup/trainingGroupContext';\nimport M from 'materialize-css/dist/js/materialize.min.js';\n\nconst MemberItem = ({ member }) => {\n    const memberContext = useContext(MemberContext);\n    const { deleteMember, setCurrent, clearCurrent } = memberContext;\n\n    const { _id, name, email, role } = member;\n\n    const trainingGroupContext = useContext(TrainingGroupContext);\n    const { trainingGroup } = trainingGroupContext;\n\n    let groups = [];\n\n    if (trainingGroup) { \n        groups = [...new Set(trainingGroup.filter(element => member.trainingGroup.includes(element._id)))];\n    }\n\n    return (\n        <div>\n            <div className=\"card bg-light card-content list-card\">\n                <h3 className=\"text-dark text-left large\">\n                    {name}{' '} \n                </h3>\n                <ul className=\"list\">\n                    {email && <li>\n                        <i className=\"fas fa-envelope-open\"></i> E-Mail Adresse: {email}\n                    </li>}\n                    {role && <li>\n                        <i className=\"fa fa-user\" aria-hidden=\"true\"></i> Berechtigung: {role}\n                    </li>}\n                    {groups && role !== (\"admin\" || \"superUser\") &&\n                        <li> \n                        <i className=\"fa fa-users\" aria-hidden=\"true\"></i> Trainingsgruppen: \n                            {' '}{groups.map(group => group.trainingGroup).join(', ')}\n                        </li>}\n                </ul>\n                {role !== (\"admin\" || \"superUser\") &&\n                <p> \n                    <button className=\"btn btn-dark btn-sm\" onClick={()=>setCurrent(member)}>Ändern</button>\n                    <button data-target=\"clear-modal-member\" class=\"btn btn-danger btn-sm modal-trigger\" onClick={() => setCurrent(member)}>Löschen</button>\n                </p>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default MemberItem;","import React, { Fragment, useContext, useEffect } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport MemberItem from './MemberItem';\nimport Spinner from '../layout/Spinner';\nimport AuthContext from '../../context/auth/authContext';\nimport MemberContext from '../../context/member/memberContext';\n\nconst Member = () => {\n    const authContext = useContext(AuthContext);\n    const { role } = authContext;\n\n    const memberContext = useContext(MemberContext); \n    const { members, filtered, getMembers, loading } = memberContext;\n\n    useEffect(() => {\n        getMembers();\n        // eslint-disable-next-line\n    }, []);\n    \n    if (members !== null && members.length === 0 && !loading && role === ('admin' || 'superUser')) {\n        return <h4>Bitte füge ein Mitglied hinzu:</h4>\n    }\n\n    return (\n        <Fragment>\n            {members !== null && !loading ? (\n                <TransitionGroup>\n                {filtered !== null \n                ? filtered.map(member => (\n                    <CSSTransition key={member._id} timeout={300} classNames=\"item\">\n                    <MemberItem member={member} />\n                    </CSSTransition>\n                )) \n                : members.map(member => (\n                    <Fragment>\n                        <CSSTransition key={member._id} timeout={300} classNames=\"item\">\n                        <MemberItem member={member} />\n                        </CSSTransition>\n                        {member.familyMember !== null && member.familyMember.map(subuser => (\n                            <CSSTransition key={subuser._id} timeout={300} classNames=\"item\">\n                            <MemberItem member={subuser} />\n                            </CSSTransition>\n                        ))}\n                    </Fragment>\n                ))}\n                </TransitionGroup>\n                ) : <Spinner />}\n        </Fragment>\n    )\n}\n\nexport default Member;","import React, { useState, useContext, useEffect } from 'react';\nimport MemberContext from '../../context/member/memberContext';\nimport M from 'materialize-css/dist/js/materialize.min.js';\n\nconst MemberForm = () => {    \n    const memberContext = useContext(MemberContext);\n    const { updateMember, clearCurrent, current } = memberContext;\n\n    const [member, setMember] = useState({\n        name: \"\",\n        email: \"\",\n        role: \"\",\n        trainingGroup: [],\n        trainingSessions: []\n    });\n    \n    const { name, email, role } = member;\n    \n    const [checked, setChecked] = useState(true);\n    const [checkedTrainer, setCheckedTrainer] = useState(false);\n    \n    useEffect(() => {\n        if (current !== null) {\n            setMember(current);\n            if (current.role === 'trainer') {\n                setCheckedTrainer(true);\n            }\n        } else {\n            setMember({\n              name: \"\",\n              email: \"\",\n              role: \"\",\n              trainingGroup: [],\n              trainingSessions: []\n            });\n        }\n    }, [memberContext, current]);\n    \n    const onSubmit = e => {\n        e.preventDefault();\n        if (email === '') {\n            M.toast({ html: 'Bitte eine gültige E-Mail Adresse eingeben', classes: 'red darken-1', displayLength: 1500 });\n        } else {\n            checked === true ? current.role = \"none\" : current.role = \"member\";\n            checkedTrainer === true ? current.role = \"trainer\" : current.role = \"member\";\n            \n            const updMember = {\n                _id: current._id,\n                name,\n                email,\n                role: current.role,\n                trainingGroup: current.trainingGroup,\n                date: new Date()\n            }\n            \n            updateMember(updMember);\n        }\n    }\n\n    const clearAll = () => {\n        clearCurrent();\n    }\n\n    return (\n        <form onSubmit={onSubmit}>\n            <h2 className=\"text-dark large\">Mitglied ändern</h2>\n            <h2 className=\"text-dark large\">{name}</h2>\n            {role === \"none\" && \n                <div className=\"switch\">\n                    Berechtigung\n                <label>\n                        :  kein Mitglied\n                    <input type=\"checkbox\" name=\"role\" value={checked} onClick={() => setChecked(!checked)} />\n                        <span class=\"lever\"></span>\n                    Mitglied\n                </label>\n                </div>}\n            <br />        \n            {(role === \"member\" || role === \"trainer\") &&  !!member.email &&   \n            <div class='switch'>\n                <label>\n                    Mitglied \n                    <input type=\"checkbox\" name=\"role\" value={checkedTrainer} onClick={() => setCheckedTrainer(!checkedTrainer)} />\n                    <span class=\"lever\"></span>\n                    Trainer\n                </label>\n            </div>}\n            <br />\n            <div>\n                <a href=\"#trainingGroup-list-modal\" className=\"btn btn-dark btn-block modal-trigger\">\n                    Trainingsgruppen\n                </a>\n            </div>\n            {current && <div>\n                {(role === \"none\" || role === \"member\" || role === \"trainer\") && <div>\n                    <br/>\n                    <a href=\"#clear-modal-member\" className=\"btn btn-danger btn-block modal-trigger\">\n                        Löschen\n                    </a>\n                    <input type=\"submit\" value={'Mitglied aktualisieren'} className=\"btn btn-primary btn-block\"/>\n                </div>}\n                <br/>\n                <div>\n                    <button className=\"btn btn-light btn-block\" onClick={clearAll}>Formular leeren</button>\n                </div>\n            </div>}\n        </form>\n    )\n}\n\nexport default MemberForm;","import { createContext } from 'react';\n\nconst alertContext = createContext();\n\nexport default alertContext;","import React, { useState, useContext, useEffect } from 'react';\nimport AlertContext from '../../context/alert/alertContext';\nimport MemberContext from '../../context/member/memberContext';\nimport AuthContext from '../../context/auth/authContext';\nimport PushNote from '../pushNotes/pushNotes';\nimport M from 'materialize-css/dist/js/materialize.min.js';\n\nconst EditOwnData = () => {\n    const alertContext = useContext(AlertContext);\n    const { setAlert } = alertContext;\n\n    const authContext = useContext(AuthContext);\n    \n    const memberContext = useContext(MemberContext);\n    const { updateMember } = memberContext;\n\n    const [member, setMember] = useState({\n        name: \"\",\n        email: \"\",\n        role: \"\",\n        trainingGroup: [],\n        trainingSessions: [],\n        familyMember: []\n    });\n\n    useEffect(() => {\n        authContext.loadMember();\n        setMember(authContext.member);\n    }, [authContext, authContext.member]);\n\n    const [newMember, setNewMember] = useState('');\n\n    const onChange = e => setNewMember(e.target.value);\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        if (newMember === \"\") return M.toast({ html: 'Bitte gib einen Namen ein...', classes: 'red darken-1', displayLength: 1500 });\n\n        const updMember = {\n            _id: authContext.member._id,\n            name: authContext.member.name,\n            email: authContext.member.email,\n            role: authContext.member.role,\n            trainingGroup: authContext.member.trainingGroup,\n            trainingSessions: authContext.member.trainingSessions,\n            familyMember: [ ...authContext.member.familyMember, { name: newMember, role: \"none\" } ],\n            date: new Date()\n        }\n        \n        updateMember(updMember);\n    }\n\n    const deleteSubuser = id => {\n        // authContext.member.familyMember = authContext.member.familyMember.filter(subUser => subUser._id !== id);\n        // updateMember(authContext.member);\n\n        // setMember({ \n        //     _id: authContext.member._id,\n        //     name: authContext.member.name,\n        //     email: authContext.member.email,\n        //     role: authContext.member.role,\n        //     trainingGroup: authContext.member.trainingGroup,\n        //     trainingSessions: authContext.member.trainingSessions,\n        //     familyMember: authContext.member.familyMember.filter(subUser => subUser._id !== id),\n        //     date: new Date()\n        // });\n\n        const updMember = { \n            _id: authContext.member._id,\n            name: authContext.member.name,\n            email: authContext.member.email,\n            role: authContext.member.role,\n            trainingGroup: authContext.member.trainingGroup,\n            trainingSessions: authContext.member.trainingSessions,\n            familyMember: authContext.member.familyMember.filter(subUser => subUser._id !== id),\n            date: new Date()\n        };\n        console.log(\"delmemb\", updMember);\n        updateMember(updMember);\n    }\n\n    return (\n        <div>\n            <form onSubmit={onSubmit}>\n                <h2 className=\"text-dark large\">Familienmitglied hinzufügen oder löschen</h2>\n                <div className='form-group'>\n                    <label htmlFor='name'>Name</label>\n                    <input type='text' name='newMember' value={newMember} onChange={onChange} />\n                </div>\n                <input type=\"submit\" value=\"Familienmitglied hinzufügen\" className=\"btn btn-dark btn-block\"/>\n            </form>\n            {member.familyMember !== null && member.familyMember.map(familyMember => (\n                <div className=\"text-dark small my-2\">\n                    <li class=\"middle\" key={familyMember._id}>\n                        {familyMember.name}{\"       \"}\n                        <div class=\"list-button text-bold\">\n                            <a href=\"#!\" onClick={() => deleteSubuser(familyMember._id)} className=\"modal-close btn btn-danger btn-sm btn list-button\">Löschen</a>\n                        </div>\n                    </li>\n                </div>\n            ))}\n            {(authContext.member.role === 'member' || authContext.member.role === 'trainer') && <PushNote /> }       \n        </div>\n    )\n}\n\nexport default EditOwnData;","import React, { useContext, useRef, useEffect } from 'react';\nimport MemberContext from '../../context/member/memberContext';\n\nconst MemberFilter = () => {\n    const memberContext = useContext(MemberContext);\n    const text = useRef('');\n\n    const { filterMembers, clearFilter, filtered } = memberContext;\n\n    useEffect(() => {\n        if (filtered === null) {\n            text.current.value = '';\n        }\n    });\n    \n    const onChange = e => {\n        if (text.current.value !== '') {\n            filterMembers(e.target.value);\n        } else {\n            clearFilter();\n        }\n    }\n\n    return (\n        <form>\n            <input ref={text} type=\"text\" placeholder=\"Suche Mitglied...\" onChange={onChange} />\n        </form>\n    )\n}\n\nexport default MemberFilter;","import React, { useContext, useEffect } from 'react';\nimport Member from '../member/Members';\nimport MemberForm from '../member/MemberForm';\nimport EditOwnData from '../member/EditOwnData';\nimport MemberFilter from '../member/MemberFilter';\nimport AuthContext from '../../context/auth/authContext';\n\nconst Home = props => {\n    const authContext = useContext(AuthContext);\n    const { role } = authContext;\n\n    useEffect(() => {\n        authContext.loadMember();\n        // eslint-disable-next-line\n    }, []);\n\n    let columns = 0;\n\n    if (role === 'admin' || role === 'superUser') {\n        columns = 3;\n    }\n\n    return (\n        <div className={`grid-${columns}`}>\n            <div className='fixed'>\n                {(role === 'admin' || role === 'superUser') &&\n                    <MemberForm />}\n\n                {(role === 'trainer' || role === 'member' || role === 'none') &&\n                    <EditOwnData />}\n                <br/>\n                {(role === 'admin' || role === 'superUser') && <MemberFilter /> }\n            </div>\n            <div className='card-grid-2 card-grid-3'>\n                {(role === 'admin' || role === 'superUser') && <Member /> }\n            </div>\n        </div>\n    )\n}\n\nexport default Home;\n","import React, { useContext, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport MemberContext from '../../context/member/memberContext';\nimport TrainingGroupContext from '../../context/trainingGroup/trainingGroupContext';\nimport TrainingSessionContext from '../../context/trainingSession/trainingSessionContext';\nimport AuthContext from '../../context/auth/authContext';\nimport M from 'materialize-css/dist/js/materialize.min.js';\n\nconst TrainingGroupItem = ({ group }) => {\n    const authContext = useContext(AuthContext);\n    const { role } = authContext;\n\n    const memberContext = useContext(MemberContext);\n    const { members } = memberContext;\n\n    const trainingGroupContext = useContext(TrainingGroupContext);\n    const { deleteTrainingGroup, setCurrent, clearCurrent } = trainingGroupContext;\n\n    const trainingSessionContext = useContext(TrainingSessionContext);\n    const { trainingSessions } = trainingSessionContext;\n\n    const { _id, trainingGroup } = group;\n\n    let memberGroup;\n\n    // Convert Object Id to Name\n    let groupMembers;\n    let subMembers = [];\n    if (members !== undefined) subMembers = members.filter(element => element.familyMember.length > 0).map(element => element.familyMember)[0];\n    let groupSubMembers = subMembers.filter(obj => group.members.includes(obj._id));\n    console.log(groupSubMembers);\n\n    if (members) {\n        groupMembers = [ ...members.filter(element => group.members.includes(element._id)), ...groupSubMembers]\n        // groupMembers = [...new Set(members.filter(element => group.members.includes(element._id)), ...groupSubMembers)];\n        groupMembers = [...new Set(groupMembers)];\n        console.log(\"groups\", groupMembers);\n    }\n\n    return (\n        <div className='column'>\n            {(role === 'admin' || role === 'superUser') &&              // field for admin and superUser\n                <div className='card bg-light'>\n                    <h3 className=\"text-dark text-left large\">\n                        {trainingGroup}{' '}\n                    </h3>\n                    {groupMembers && <div>\n                        <i className=\"fa fa-user\"></i> Mitglieder:\n                            {groupMembers.map(member => (\n                                <li key={member._id}>{member.name}</li>\n                            ))}\n                    </div>}\n                    <p>\n                        <button className=\"btn btn-dark btn-sm\" onClick={() => setCurrent(group)}>Ändern</button>\n                        <button data-target=\"clear-modal-group\" class=\"btn btn-danger btn-sm modal-trigger\" onClick={() => setCurrent(group)}>Löschen</button>\n                    </p>\n                </div>}\n            {(role === 'member' && memberGroup !== \"\") &&               // field for member\n                <div className='card bg-light'>\n                    <h3 className=\"text-dark text-left large\">\n                        {group.trainingGroup}{' '}\n                    </h3>\n                </div>}\n        </div>\n    )\n}\n\nTrainingGroupItem.propTypes = {\n    group: PropTypes.object.isRequired\n}\n\nexport default TrainingGroupItem;","import React, { Fragment, useContext } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport TrainingGroupItem from './TrainingGroupItem';\nimport Spinner from '../layout/Spinner';\nimport AuthContext from '../../context/auth/authContext';\nimport TrainingGroupContext from '../../context/trainingGroup/trainingGroupContext';\n\nconst TrainingGroups = () => {\n    const authContext = useContext(AuthContext);\n    const { role } = authContext;\n\n    const trainingGroupContext = useContext(TrainingGroupContext);\n    const { trainingGroup, filtered, loading } = trainingGroupContext;    \n\n    if (trainingGroup !== null && trainingGroup.length === 0 && !loading && role === ('admin' || 'superUser')) {\n        return <h4 className=\"large\">Bitte füge eine Trainingsgruppe hinzu:</h4>\n    }\n\n    return (\n        <Fragment>\n            {trainingGroup !== null && !loading ? (\n                <TransitionGroup>\n                {filtered !== null \n                ? filtered.map(group => (\n                    <CSSTransition key={group._id} timeout={300} classNames=\"item\">\n                    <TrainingGroupItem group={group} />\n                    </CSSTransition>\n                )) \n                : trainingGroup.map(group => (\n                    <CSSTransition key={group._id} timeout={300} classNames=\"item\">\n                    <TrainingGroupItem group={group} />\n                    </CSSTransition>\n                ))}\n                </TransitionGroup>\n                ) : <Spinner />}\n        </Fragment>\n    )\n}\n\nexport default TrainingGroups;","import React, { useState, useContext, useEffect } from 'react';\nimport TrainingGroupContext from '../../context/trainingGroup/trainingGroupContext';\nimport M from 'materialize-css/dist/js/materialize.min.js';\n\nconst TrainingGroupForm = () => {\n    const trainingGroupContext = useContext(TrainingGroupContext);\n\n    const { addTrainingGroup, updateTrainingGroup, clearCurrent, current } = trainingGroupContext;\n\n    useEffect(() => {\n        if (current !== null) {\n            setTrainingGroup(current);\n        } else {\n            setTrainingGroup({\n                trainingGroup: \"\"\n            });\n        }\n    }, [trainingGroupContext, current]);\n\n    const [group, setTrainingGroup] = useState({\n        trainingGroup: ''\n    });\n\n    const { trainingGroup } = group;\n\n    const onChange = e => setTrainingGroup({ ...group, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n        e.preventDefault();\n        if (trainingGroup === '') {\n            M.toast({ html: 'Bitte eine Gruppenbezeichnung eingeben', classes: 'kentai-color', displayLength: 1500 });\n        } else if (current === null) {\n            addTrainingGroup(group);\n        } else {\n            updateTrainingGroup(group);\n        }\n    }\n\n    const clearAll = () => {\n        clearCurrent();\n    }\n\n    return (\n        <form onSubmit={onSubmit}>\n            <h2 className=\"text-dark large\">{current ? 'Trainingsgruppe ändern' : 'Trainingsgruppe hinzufügen'}</h2>\n            <input type=\"text\" placeholder=\"Trainingsgruppe\" name=\"trainingGroup\" value={trainingGroup} onChange={onChange} />\n            <div>\n                <input type=\"submit\" value={current ? 'Trainingsgruppe aktualisieren' : 'Trainingsgruppe hinzufügen'} className=\"btn btn-dark btn-block\" />\n            </div>\n            {current && \n            <div>\n                <a href=\"#clear-modal-group\" className=\"btn btn-danger btn-block modal-trigger\">Löschen</a>\n                <br/>\n                <div>\n                    <button className=\"btn btn-light btn-block\" onClick={clearCurrent}>Formular leeren</button>\n                </div>\n                <br/>\n            </div>}\n        </form>\n    )\n}\n\nexport default TrainingGroupForm;","import React, { useContext, useRef, useEffect } from 'react';\nimport AuthContext from '../../context/auth/authContext';\nimport TrainingGroupContext from '../../context/trainingGroup/trainingGroupContext';\n\nconst TrainingGroupFilter = () => {\n    const authContext = useContext(AuthContext);\n    const { role } = authContext;\n\n    const trainingGroupContext = useContext(TrainingGroupContext);\n    const { filterTrainingGroups, clearFilter, filtered } = trainingGroupContext;\n    \n    const text = useRef('');\n\n    useEffect(() => {\n        if (filtered === null  && role === ('admin' || 'superUser')) {\n            text.current.value = '';\n        }\n    });\n    \n    const onChange = e => {\n        if (text.current.value !== '') {\n            filterTrainingGroups(e.target.value);\n        } else {\n            clearFilter();\n        }\n    }\n\n    return (\n        <form>\n            <input ref={text} type=\"text\" placeholder=\"Suche Trainingsgruppe...\" onChange={onChange} />\n        </form>\n    )\n}\n\nexport default TrainingGroupFilter;","import React, { useContext, useEffect } from 'react';\nimport TrainingGroups from '../trainingGroups/TrainingGroups';\nimport TrainingGroupForm from '../trainingGroups/TrainingGroupForm';\nimport TrainingGroupFilter from '../trainingGroups/TrainingGroupFilter';\nimport AuthContext from '../../context/auth/authContext';\n\nconst Groups = props => {\n    const authContext = useContext(AuthContext);\n    const { role } = authContext;\n\n    useEffect(() => {\n        authContext.loadMember();\n        // eslint-disable-next-line\n    }, []);\n\n    let columns = 0;\n\n    if (role === 'admin' || role === 'superUser') {\n        columns = 3;\n    }\n\n    return (\n        <div className={`grid-${columns}`}>\n            <div className='fixed'>\n                {(role === 'admin' || role === 'superUser') && <TrainingGroupForm />}\n                {(role === 'admin' || role === 'superUser') && <TrainingGroupFilter />}\n            <br/>\n            </div>\n            <div className='card-grid-2 card-grid-3'>\n                {(role === 'admin' || role === 'superUser') && <TrainingGroups />}\n            </div>\n        </div>\n    )\n}\n\nexport default Groups;\n","import React, { useEffect, useContext } from 'react';\nimport TrainingGroupContext from '../../context/trainingGroup/trainingGroupContext';\nimport MemberContext from '../../context/member/memberContext';\n\nconst TrainerOptions = () => {\n    const trainingGroupContext = useContext(TrainingGroupContext);\n    const { getTrainingGroups } = trainingGroupContext;\n\n    const memberContext = useContext(MemberContext);\n    const { members, getMembers, loading } = memberContext;\n    \n    useEffect(() => {\n        getTrainingGroups();\n        getMembers();\n        // eslint-disable-next-line\n    }, []);\n\n    return (\n        !loading && members !== null && members.filter(member => (member.role === 'admin' || member.role === 'trainer')).map(item => <option key={item._id} value={item._id} >\n            {item.name}\n        </option>)\n    )\n}\n\nexport default TrainerOptions;\n","import React, { useState, useContext, useEffect } from 'react';\nimport TrainingGroupContext from '../../context/trainingGroup/trainingGroupContext';\nimport TrainingSessionContext from '../../context/trainingSession/trainingSessionContext';\nimport TrainingGroupOptions from './TrainingGroupOptions';\nimport TrainerOptions from './TrainerOptions';\nimport M from 'materialize-css/dist/js/materialize.min.js';\n\n\nconst TrainingSessionForm = () => {\n    const trainingGroupContext = useContext(TrainingGroupContext);\n    const { _id } = trainingGroupContext;\n\n    const trainingSessionContext = useContext(TrainingSessionContext);\n    const { addTrainingSession, updateTrainingSession, clearCurrent, current } = trainingSessionContext;\n\n\n    useEffect(() => {\n        if (current !== null) {\n            setTrainingSession(current);\n        } else {\n            setTrainingSession({\n                trainingGroup: \"\",\n                description: \"\",\n                trainer: \"\",\n                time: \"\",\n                timeTo: \"\",\n                date: \"\",\n                maxMembers: \"\",\n                memberCount: \"\",\n                members: []\n            });\n        }\n    }, [trainingSessionContext, current]);\n\n    const [trainingSession, setTrainingSession] = useState({\n        trainingGroup: \"\",\n        description: \"\",\n        trainer: \"\",\n        time: \"\",\n        timeTo: \"\",\n        date: \"\",\n        maxMembers: \"\",\n        memberCount: \"\",\n        members: []\n    });\n\n    const { trainingGroup, description, trainer, time, timeTo, date, maxMembers } = trainingSession;\n\n    const onChange = e => setTrainingSession({ ...trainingSession, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n        e.preventDefault();\n        if (trainingGroup === '') {\n            M.toast({ html: 'Bitte Trainingsgruppe eingeben', className: 'kentai-color', displayLength: 1500 });\n        }\n        else if (description === '') {\n            M.toast({ html: 'Bitte Beschreibung eingeben', className: 'kentai-color', displayLength: 1500 });\n        }\n        else if (trainer === '') {\n            M.toast({ html: 'Bitte Trainer eingeben', classes: 'kentai-color', displayLength: 1500 });\n        }\n        else if (date === '') {\n            M.toast({ html: 'Bitte Datum eingeben', classes: 'kentai-color', displayLength: 1500 });\n        }\n        else if (time === '') {\n            M.toast({ html: 'Bitte Zeit eingeben', classes: 'kentai-color', displayLength: 1500 });\n        } else if (current === null) {\n            addTrainingSession(trainingSession);\n        } else {\n            updateTrainingSession(trainingSession);\n        }\n    }\n\n    const clearAll = () => {\n        clearCurrent();\n    }\n\n    return (\n        <form onSubmit={onSubmit}>\n            <h2 className=\"text-dark large\">{current ? 'Trainingseinheit ändern' : 'Trainingseinheit hinzufügen'}</h2>\n            <div className=\"input-field\">\n                <select name=\"trainingGroup\" key={_id} value={_id} className=\"browser-default\" onChange={onChange}>\n                    <option value=\"\" disabled selected>\n                        Trainingsgruppe...\n                    </option>\n                    <TrainingGroupOptions />\n                </select>\n            </div>\n            <input type=\"text\" placeholder=\"Beschreibung\" name=\"description\" value={description} onChange={onChange} />\n            <div className=\"input-field\">\n                <select name=\"trainer\" key={_id} value={_id} className=\"browser-default\" onChange={onChange}>\n                    <option value=\"\" disabled selected>\n                        Trainer...\n                    </option>\n                    <TrainerOptions />\n                </select>\n            </div>\n            von: <input type=\"time\" placeholder=\"\" name=\"time\" value={time} onChange={onChange} />\n            bis: <input type=\"time\" placeholder=\"\" name=\"timeTo\" value={timeTo} onChange={onChange} />\n            <input type=\"date\" placeholder=\"\" name=\"date\" value={date} onChange={onChange} />\n            Teilnehmer zugelassen: <input type=\"number\" placeholder=\"0\" name=\"maxMembers\" value={maxMembers} onChange={onChange} />\n            <div>\n                <input type=\"submit\" value={current ? 'Trainingseinheit aktualisieren' : 'Trainingseinheit hinzufügen'} className=\"btn btn-dark btn-block\" />\n            </div>\n            {current && <div>\n                <a href=\"#clear-modal-session\" className=\"btn btn-danger btn-block modal-trigger\">Löschen</a>\n                <br />\n                <button className=\"btn btn-light btn-block\" onClick={clearAll}>Formular leeren</button>\n            </div>}\n        </form>\n    )\n}\n\nexport default TrainingSessionForm;","import React, { useContext, useEffect } from 'react';\nimport TrainingSession from '../trainingSessions/TrainingSessions';\nimport TrainingSessionForm from '../trainingSessions/TrainingSessionForm';\nimport TrainingSessionFilter from '../trainingSessions/TrainingSessionFilter';\nimport AuthContext from '../../context/auth/authContext';\n\nconst Sessions = props => {\n    const authContext = useContext(AuthContext);\n    const { role } = authContext;\n\n    useEffect(() => {\n        authContext.loadMember();\n        // eslint-disable-next-line\n    }, []);\n\n    let columns = 0;\n\n    if (role === 'admin' || role === 'superUser') {\n        columns = 3;\n    }\n\n    return (\n        <div className={`grid-${columns}`}>\n            <div className='fixed'>\n                {(role === 'admin' || role === 'superUser') && <TrainingSessionForm />}\n                <br/>\n                {(role === 'admin' || role === 'superUser') && <TrainingSessionFilter />}\n            </div>\n            <div className='card-grid-2 card-grid-3'>\n                {(role === 'admin' || role === 'superUser') && <TrainingSession />}\n            </div>\n        </div>\n    )\n}\n\nexport default Sessions;\n","import React, { useContext, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\nimport 'moment/locale/de';\nimport AuthContext from '../../context/auth/authContext';\nimport MemberContext from '../../context/member/memberContext';\nimport TrainingGroupContext from '../../context/trainingGroup/trainingGroupContext';\nimport TrainingSessionContext from '../../context/trainingSession/trainingSessionContext';\n\nMoment.globalLocale = 'de';\n\nconst OldSessionItem = ({ session }) => {\n    const authContext = useContext(AuthContext);\n    const { role, loading } = authContext;\n\n    const trainingSessionContext = useContext(TrainingSessionContext);\n    const { getTrainingSessions, deleteTrainingSession, clearCurrent, } = trainingSessionContext;\n\n    const trainingGroupContext = useContext(TrainingGroupContext);\n    const { trainingGroup, getTrainingGroups } = trainingGroupContext;\n\n    const memberContext = useContext(MemberContext);\n    const { getMembers } = memberContext;\n\n    const { _id, description, maxMembers, memberCount, members, time, timeTo, date } = session;\n\n    let group = [];\n    if (trainingGroup) {\n        group = trainingGroup.filter(item => item._id === session.trainingGroup);\n    }\n\n    const onDelete = () => {\n        deleteTrainingSession(_id);\n        clearCurrent();\n    }\n\n    const [checked, setChecked] = useState(false);\n\n    useEffect(() => {\n        if (session.members.find(element => element === authContext.member._id) !== undefined) {\n            console.log(members.find(element => element === authContext.member._id));\n            setChecked(true);\n        }\n    }, [getMembers, getTrainingGroups, getTrainingSessions, session.members, authContext.member._id, members] );\n\n    // Convert ObjectMember Id to Name\n    let sessionMembers;\n    if (memberContext.members) {\n        // console.log(\"context\", memberContext.members);\n        let subMembers = [ ...memberContext.members.filter(element => element.familyMember.length > 0).map(element => element.familyMember).flat(1) ];\n        // console.log(\"subs\", subMembers);\n        let sessionSubMembers = subMembers.filter(obj => session.members.includes(obj._id));\n        // console.log(\"groupsubs\", sessionSubMembers);\n        sessionMembers = [ ...memberContext.members.filter(element => session.members.includes(element._id)), ...sessionSubMembers ];     \n        // sessionMembers = [...new Set(memberContext.members.filter(element => session.members.includes(element._id)))];\n    }\n\n    // Convert ObjectTrainer Id to Name\n    let trainerName;\n    if (memberContext.members && session.trainer) {\n        trainerName = memberContext.members.filter(element => element._id === session.trainer);\n    }\n\n    return (\n        <div className='column'>\n            <div className={'card bg-light card-content'}>\n\n                <h3 className={'text-primary text-left large'}>\n                  \n                    {description}{' '}\n                </h3>\n                <ul className=\"list\">\n                    {trainingGroup && group[0].trainingGroup && !loading && <li>\n                        <i></i> Trainingsgruppe: {group[0].trainingGroup\n                        }\n                    </li>}\n                    {memberContext.members && trainerName && !loading && <li>\n                        <i></i> Trainer: {trainerName[0].name}\n                    </li>}\n                    {time && <li>\n                        <i></i> Zeit: <time format='h:mm:ss'>{time}</time>{timeTo && <time format='h:mm:ss'>{` - ${timeTo}`}</time>}\n                    </li>}\n                    {date && <li>\n                        <i></i> Datum: <Moment format='Do MMMM YYYY'>{date}</Moment>\n                    </li>}\n                    {maxMembers && <li>\n                        <i></i> Maximale Teilnehmer: {maxMembers}\n                    </li>}\n                    {memberCount && <li>\n                        <i></i> Angemeldete Teilnehmer: {memberCount}\n                    </li>}\n                    {(role === 'admin' || role === 'superUser') && sessionMembers && <div>\n                        <i class=\"fa fa-user\"></i> <bold>Teilnehmer:</bold> <br />\n                        {sessionMembers.map(member => member.name).join(', ')}\n                    </div>}\n                </ul>\n                {(role === 'admin' || role === 'superUser') && <p>\n                    <button className=\"btn btn-danger btn-sm\" onClick={onDelete}>Löschen</button>\n                </p>}\n            </div>\n        </div>\n    )\n}\n\nOldSessionItem.propTypes = {\n    session: PropTypes.object.isRequired\n}\n\nexport default OldSessionItem;","import React from 'react'\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx';\n\nconst ExportCSV = ({ csvData, fileName }) => {\n\n    const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\n    const fileExtension = '.xlsx';\n\n    const exportToCSV = (csvData, fileName) => {\n        const ws = XLSX.utils.json_to_sheet(csvData);\n        const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\n        const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\n        const data = new Blob([excelBuffer], { type: fileType });\n        FileSaver.saveAs(data, fileName + fileExtension);\n    }\n\n    return (\n        <button className=\"btn btn-dark btn-sm\" variant=\"warning\" onClick={(e) => exportToCSV(csvData, fileName)}>Exportiere Liste</button>\n    )\n}\n\n\nexport default ExportCSV;","import React, { Fragment, useContext } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport Moment from 'react-moment';\nimport 'moment/locale/de';\nimport OldSessionItem from './OldSessionItem';\nimport Spinner from '../layout/Spinner';\nimport moment from 'moment';\nimport ExportCSV from './ExportCSV';\nimport AuthContext from '../../context/auth/authContext';\nimport TrainingSessionContext from '../../context/trainingSession/trainingSessionContext';\nimport MemberContext from '../../context/member/memberContext';\n\nMoment.globalLocale = 'de';\n\nconst OldSessions = () => {\n    const authContext = useContext(AuthContext);\n    const { role } = authContext;\n\n    const trainingSessionContext = useContext(TrainingSessionContext);\n    const { trainingSessions, loading } = trainingSessionContext;\n\n    const memberContext = useContext(MemberContext);\n\n    const today = moment(Date.now()).format('YYYY-MM-DD');\n\n    let tGroup = []\n    if (trainingSessions && (role === 'admin' || role === 'superUser')) {\n        tGroup = trainingSessions.filter(tSession => tSession.date < moment(Date.now()).format('YYYY-MM-DD'));\n    }\n\n    // Data for Excel Export\n    let exportGroup = [{\n        Datum: '',\n        Zeit: '',\n        Trainer: '',\n        Trainingseinheit: '',\n        Teilnehmer: ''\n    }];\n\n    if (trainingSessions && (role === 'admin' || role === 'superUser')) {\n        exportGroup = trainingSessions.filter(tSession => tSession.date < moment(Date.now()).format('YYYY-MM-DD')).map(function (item) {\n            let exportMembers;\n            let train;\n            let sessionTime;\n            if (memberContext.members) {\n                let exportMembersArray = [...new Set(memberContext.members.filter(element => item.members.includes(element._id)))];\n                exportMembers = exportMembersArray.map(element => element.name).join(', ');\n                let trainArray = memberContext.members.filter(element => element._id === item.trainer);\n                if (trainArray[0]) train = trainArray[0].name;\n                item.timeTo !== undefined ? sessionTime = item.time + ' - ' + item.timeTo : sessionTime = item.time;\n            }\n            return {\n                Datum: moment(item.date).format('DD.MMMM.YYYY'),\n                Zeit: sessionTime,\n                Trainingseinheit: item.description,\n                Trainer: train,\n                Teilnehmer: exportMembers\n            }\n        });\n    }\n\n    return (\n        <Fragment>\n            <ExportCSV csvData={exportGroup} fileName={`Trainingseinheiten-Export_${today}`} />\n            {tGroup !== null && (role === 'admin' || role === 'superUser') && !loading ? (\n                <TransitionGroup>\n                    {tGroup.map(session => (\n                        <CSSTransition key={session._id} timeout={300} classNames=\"item\">\n                            <OldSessionItem session={session} />\n                        </CSSTransition>\n                    ))}\n                </TransitionGroup>\n            ) : <Spinner />}\n        </Fragment>\n    )\n}\n\nexport default OldSessions;","import React from 'react';\n\nconst About = props => {\n    return (\n        <div>\n            <h1>Über diese App</h1>\n            <p className=\"my-1\">\n                Plane deine Trainingseinheiten mit deinen Freunden\n            </p>\n            <p className=\"bg-dark p\">\n                <strong>Version: </strong>1.0.0\n            </p>    \n        </div>\n    )\n}\n\nexport default About\n","import React, { useState, useContext, useEffect } from 'react';\nimport AlertContext from '../../context/alert/alertContext';\nimport AuthContext from '../../context/auth/authContext';\n\nconst Register = (props) => {\n    const alertContext = useContext(AlertContext);\n    const authContext = useContext(AuthContext);\n\n    const { setAlert } = alertContext;\n    const { register, error, clearErrors, isAuthenticated } = authContext;\n\n    useEffect(() => {\n        if(isAuthenticated) {\n            props.history.push('/');\n        }\n\n        if(error) {\n            setAlert(error, 'danger');\n            clearErrors();\n        }\n\n        //eslint-disable-next-line\n    }, [error, isAuthenticated, props.history])\n\n    const [ members, setMember ] = useState({\n        name: '',\n        email: '',\n        password: '',\n        password2: ''\n    });\n\n    const { name, email, password, password2 } = members;\n\n    const onChange = e => setMember({ ...members, [e.target.name]: e.target.value }); \n\n    const onSubmit = e => {\n        e.preventDefault();\n        if (name === '' || email === '' || password === '') {\n            setAlert('Bitte alle Felder ausfüllen', 'dark');\n        } else if (password !== password2) {\n            setAlert('Die Passworteingaben stimmen nicht übereinander', 'dark');\n        } else {\n            register({\n                name,\n                email,\n                password\n            });\n        }\n    }\n\n    return (\n        <div className='form-container'>\n            <h1 className='text-dark x-large'>\n                Konto registrieren\n            </h1>\n            <form onSubmit={onSubmit}>\n                <div className='form-group'>\n                    <label htmlFor='name'>Name</label>\n                    <input type='text' name='name' value={name} onChange={onChange} />\n                </div>\n                <div className='form-group'>\n                    <label htmlFor='email'>E-Mail Adresse</label>\n                    <input type='email' name='email' value={email} onChange={onChange} />\n                </div>\n                <div className='form-group'>\n                    <label htmlFor='password'>Passwort (Mindestens 8 Zeichen inklusive Groß- und Kleinbuchstaben, Zahlen und Sonderzeichen)</label>\n                    <input type='password' name='password' value={password} onChange={onChange} />\n                </div>\n                <div className='form-group'>\n                    <label htmlFor='password2'>Passwort bestätigen</label>\n                    <input type='password' name='password2' value={password2} onChange={onChange} />\n                </div>\n                <input type=\"submit\" value=\"Registrieren\" className=\"btn btn-dark btn-block\"/>\n            </form>\n        </div>\n    )\n}\n\nexport default Register;","import React, { useState, useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport AlertContext from '../../context/alert/alertContext';\nimport AuthContext from '../../context/auth/authContext';\n// import ResetPassword from './ResetPassword';\n\nconst Login = (props) => {\n    const alertContext = useContext(AlertContext);\n    const authContext = useContext(AuthContext);\n\n    const { setAlert } = alertContext;\n    const { login, error, clearErrors, isAuthenticated } = authContext;\n\n    useEffect(() => {\n        if(isAuthenticated) {\n            props.history.push('/');\n        }\n\n        if (error) {\n            setAlert(error, 'danger');\n            clearErrors();\n        }\n\n        //eslint-disable-next-line\n    }, [error, isAuthenticated, props.history])\n\n    const [member, setMember] = useState({\n        email: '',\n        password: ''\n    });\n\n    const { email, password } = member;\n\n    const onChange = e => setMember({ ...member, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n        e.preventDefault();\n        if (email === '' || password === '') {\n            setAlert('Bitte E-Mail Adresse und Passwort eingeben', 'danger');\n        } else {\n            login({\n                email,\n                password\n            });\n        }\n    }\n\n    return (\n        <div className='form-container'>\n            <h1>\n                <span className='text-dark large'>Login</span>\n            </h1>\n            <form onSubmit={onSubmit}>\n                <div className='form-group'>\n                    <label htmlFor='email'>E-Mail Adresse</label>\n                    <input type='email' name='email' value={email} onChange={onChange} />\n                </div>\n                <div className='form-group'>\n                    <label htmlFor='password'>Passwort</label>\n                    <input type='password' name='password' value={password} onChange={onChange} />\n                </div>\n                <input type=\"submit\" value=\"Login\" className=\"btn btn-dark btn-block\" />\n            </form>\n            <li>\n                <Link to='/resetPassword'><span className='text-dark small'>Passwort zurücksetzen</span></Link>\n            </li>\n        </div>\n        \n    )\n}\n\nexport default Login;","import React, { useContext } from 'react';\nimport AlertContext from '../../context/alert/alertContext';\n\nconst Alerts = () => {\n    const alertContext = useContext(AlertContext);\n\n    return (\n        alertContext.alerts.length > 0 && alertContext.alerts.map(alert => (\n            <div key={alert.id} className={`alert alert-${alert.type}`}>\n                 <i className=\"fas fa-info-circle\"></i> {alert.msg}\n            </div>\n            )\n        )\n    )\n}\n\nexport default Alerts;","import React, { Fragment, useState, useEffect, useContext } from 'react';\nimport AlertContext from '../../context/alert/alertContext';\nimport MemberContext from '../../context/member/memberContext';\nimport TrainingGroupContext from '../../context/trainingGroup/trainingGroupContext';\n\nconst TrainingGroupListModal = () => {\n    const alertContext = useContext(AlertContext);\n    const { setAlert } = alertContext;\n    \n    const memberContext = useContext(MemberContext);\n    const { updateMember, current, clearCurrent } = memberContext;\n    \n    const trainingGroupContext = useContext(TrainingGroupContext);\n    const { trainingGroup, getTrainingGroups, updateTrainingGroup } = trainingGroupContext;\n    \n    useEffect(() => {\n        if (current !== null) {\n            setMember(current);\n        } else {\n            setMember({\n                name: \"\",\n                email: \"\",\n                role: \"\",\n                trainingGroup: [],\n                trainingSessions: []\n            });\n        }\n        getTrainingGroups();\n        // eslint-disable-next-line\n    }, [memberContext, current]);\n\n    const [member, setMember] = useState({\n        name: \"\",\n        email: \"\",\n        role: \"\",\n        trainingGroup: [],\n        trainingSessions: [],\n        familyMember: []\n    });\n    \n    const { name, email } = member;\n\n    \n    const [checked, setChecked] = useState(false);\n\n    const onChange = (e, id) => {\n        if (current === null) {\n            return;\n        }\n        if (member.trainingGroup.includes(id)) {\n            // was already checked\n            setMember({ trainingGroup: member.trainingGroup.filter(item => item !== id) });\n        } else {\n            // was not checked\n            setMember({ trainingGroup: [...member.trainingGroup, e.target.value] });\n            console.log(trainingGroup);\n        }\n    };\n    \n    const onSubmit = e => {\n        e.preventDefault();\n        if (email === '') {\n            setAlert('Bitte eine gültige E-Mail Adresse eingeben', 'danger');\n        } else {\n            checked === true ? current.role = \"none\" : current.role = \"member\";\n            \n            const updMember = {\n                _id: current._id,\n                name,\n                email,\n                role: current.role,\n                trainingGroup: member.trainingGroup,\n                date: new Date()\n            }\n            \n            updateMember(updMember);\n            // console.log(\"upodmemb\", updateMember);\n            // console.log(\"upodmemb\", member);\n            // console.log(\"memberid\", member._id);\n            // console.log(\"currentid\", current._id);\n\n            // Update members in trainingGroups\n            trainingGroup.map((item) => {\n                // console.log(\"before item\", item);\n                // console.log(\"before traininggroup filter bool\", member.trainingGroup.filter(element => element === item._id) != '');\n                // console.log(\"before item\", member.trainingGroup.filter(element => element === item._id));\n                if (member.trainingGroup.filter(element => element === item._id) != '') {\n                    console.log('add: ' + member.trainingGroup.filter(element => element === item._id));\n                \tupdateTrainingGroup({ _id: item._id, members: [...item.members, current._id] })\n                } else {\n                    console.log(\"filter member in traininggroup\", current)\n                    updateTrainingGroup({ _id: item._id, members: item.members.filter(element => element !== current._id) });\n            }});\n            \n        }\n        setMember({\n            name: \"\",\n            email: \"\",\n            role: \"\",\n            trainingGroup: [],\n            trainingSessions: []\n        });\n        clearCurrent();\n    }\n\n    return (\n        <div id='trainingGroup-list-modal' className='modal'>\n            <div className=\"modal-content\">\n                <h4>Trainingsgruppen</h4>\n                <ul className=\"collection\">\n                    <Fragment>\n                      {trainingGroup && trainingGroup.map((group,i) => (\n                          <p id={group._id} key={group._id}>\n                              <label>\n                                  <input type=\"checkbox\" key={group._id} className=\"filled-in\" name={group._id} value={group._id} checked={member.trainingGroup.includes(group._id)} onChange={e => onChange(e, group._id)} />\n                                  <span>{group.trainingGroup}</span>\n                              </label>\n                          </p>\n                      ))}\n                    </Fragment>\n                </ul>\n                <div className=\"modal-footer\">\n                    <a href=\"#!\" onClick={onSubmit} className=\"modal-close waves-effect waves-kentai btn\">Bestätigung</a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default TrainingGroupListModal;\n","import React, { Fragment, useState, useEffect, useContext } from 'react';\nimport MemberContext from '../../context/member/memberContext';\nimport TrainingGroupContext from '../../context/trainingGroup/trainingGroupContext';\n\nconst ClearModalMember = () => {\n    \n    const memberContext = useContext(MemberContext);\n    const { current, deleteMember, clearCurrent, getMembers } = memberContext;\n    \n    const trainingGroupContext = useContext(TrainingGroupContext);\n    const { trainingGroup, getTrainingGroups, updateTrainingGroup } = trainingGroupContext;\n    \n    useEffect(() => {\n        if (current !== null) {\n            setMember(current);\n        } else {\n            setMember({\n                name: \"\",\n                email: \"\",\n                role: \"\",\n                trainingGroup: [],\n                trainingSessions: []\n            });\n        }\n        getTrainingGroups();\n        // eslint-disable-next-line\n    }, [memberContext, current]);\n\n    const [member, setMember] = useState({\n        name: \"\",\n        email: \"\",\n        role: \"\",\n        trainingGroup: [],\n        trainingSessions: []\n    });\n    \n    const onDelete = () => {\n        deleteMember(current._id);\n        clearCurrent();\n        window.location.reload();\n    }\n\n    return (\n        <div id='clear-modal-member' className='modal'>\n            <div className=\"modal-content\">\n            {current &&\n                    <h5><span className='text-bold'>{current.name}</span> wirklich löschen?</h5>}\n                <div className=\"modal-footer\">\n                    <a href=\"#!\" onClick={onDelete} className=\"modal-close btn btn-danger btn-sm btn\">Löschen</a> {' '}\n                    <a href=\"#!\" className=\"modal-close btn btn-dark btn-sm btn\">Abbrechen</a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ClearModalMember;\n","import React, { Fragment, useState, useEffect, useContext } from 'react';\nimport TrainingGroupContext from '../../context/trainingGroup/trainingGroupContext';\nimport TrainingSessionContext from '../../context/trainingSession/trainingSessionContext';\nimport M from 'materialize-css/dist/js/materialize.min.js';\n\nconst ClearModalGroup = () => {\n    const trainingGroupContext = useContext(TrainingGroupContext);\n    const { deleteTrainingGroup, current, clearCurrent } = trainingGroupContext;\n\n    const trainingSessionContext = useContext(TrainingSessionContext);\n    const { trainingSessions } = trainingSessionContext;\n    \n    useEffect(() => {\n        if (current !== null) {\n            setTrainingGroup(current);\n        } else {\n            setTrainingGroup({\n                trainingGroup: \"\"\n            });\n        }\n    }, [trainingGroupContext, current]);\n\n    const [group, setTrainingGroup] = useState({\n        trainingGroup: ''\n    });\n\n    const { _id } = group;\n\n    // Delete training group item\n    const onDelete = () => {\n        if (trainingSessions) {\n            const delResult = trainingSessions.filter(item => item.trainingGroup === _id);\n            if (delResult[0]?.trainingGroup !== undefined) {\n                M.toast({ html: 'Bitte erst alle Traininingseinheiten für die Gruppe löschen', classes: 'kentai-color', displayLength: 1500 });\n            }\n        } else {\n            deleteTrainingGroup(_id);\n            clearCurrent();\n        }\n    }\n\n    return (\n        <div id='clear-modal-group' className='modal'>\n            <div className=\"modal-content\">\n            {current &&\n                <h5><span className='text-bold'>{current.trainingGroup}</span> wirklich löschen?</h5>}\n                <div className=\"modal-footer\">\n                    <a href=\"#!\" onClick={onDelete} className=\"modal-close btn btn-danger btn-sm btn\">Löschen</a> {' '}\n                    <a href=\"#!\" className=\"modal-close btn btn-dark btn-sm btn\">Abbrechen</a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ClearModalGroup;\n","import React, { useContext } from 'react';\nimport TrainingSessionContext from '../../context/trainingSession/trainingSessionContext';\n\nconst ClearModalSession = ({ session }) => {\n    const trainingSessionContext = useContext(TrainingSessionContext);\n    const { deleteTrainingSession, clearCurrent, current } = trainingSessionContext;\n\n    const onDelete = () => {\n        deleteTrainingSession(current._id);\n        clearCurrent();\n    }\n\n    return (\n        <div id='clear-modal-session' className='modal'>\n            <div className=\"modal-content\">\n            {current &&\n                <h5><span className='text-bold'>{current.description}</span> wirklich löschen?</h5>}\n                <div className=\"modal-footer\">\n                    <a href=\"#!\" onClick={onDelete} className=\"modal-close btn btn-danger btn-sm btn\">Löschen</a> {' '}\n                    <a href=\"#!\" className=\"modal-close btn btn-dark btn-sm btn\">Abbrechen</a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ClearModalSession;\n","import React, { useState, useContext, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport AlertContext from '../../context/alert/alertContext';\nimport AuthContext from '../../context/auth/authContext';\n\nconst ResetPassword = (props) => {\n    const alertContext = useContext(AlertContext);\n    const authContext = useContext(AuthContext);\n\n    const { setAlert } = alertContext;\n    const { resetPassword, error, clearErrors } = authContext;\n\n    const history = useHistory();\n\n    // useEffect(() => {\n    //     if(isAuthenticated) {\n    //         props.history.push('/');\n    //     }\n\n    //     if(error) {\n    //         setAlert(error, 'danger');\n    //         clearErrors();\n    //     }\n\n    //     //eslint-disable-next-line\n    // }, [error, isAuthenticated, props.history])\n\n    const [ members, setMember ] = useState({\n        name: '',\n        email: '',\n        password: '',\n        password2: ''\n    });\n\n    const { email } = members;\n\n    const onChange = e => setMember({ ...members, [e.target.name]: e.target.value }); \n\n    const onSubmit = e => {\n        e.preventDefault();\n        if (email === '') {\n            setAlert('Bitte gib deine E-Mail Adresse ein', 'dark');\n        } else {\n            resetPassword({\n                email\n            });\n            setAlert('Wir haben dir eine Mail zum Zurücksetzen des Passworts zugesendet', 'dark');\n            history.push(\"/login\");\n        }\n    }\n\n    return (\n        <div className='form-container'>\n            <p className='text-dark large'>\n                Gib deine E-Mail Adresse zum Zurücksetzen des Passworts ein:\n            </p>\n            <form onSubmit={onSubmit}>\n                <div className='form-group'>\n                    <label htmlFor='email'>E-Mail Adresse</label>\n                    <input type='email' name='email' value={email} onChange={onChange} />\n                </div>\n                <input type=\"submit\" value=\"Abschicken\" className=\"btn btn-dark btn-block\"/>\n            </form>\n        </div>\n    )\n}\n\nexport default ResetPassword;","import React, { useState, useContext, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport AlertContext from '../../context/alert/alertContext';\nimport AuthContext from '../../context/auth/authContext';\n\nconst NewPassword = (props) => {\n    const alertContext = useContext(AlertContext);\n    const authContext = useContext(AuthContext);\n\n    const { setAlert } = alertContext;\n    const { resetPassword, newPassword, error, clearErrors } = authContext;\n\n    const history = useHistory();\n\n    // useEffect(() => {\n    //     if(isAuthenticated) {\n    //         props.history.push('/');\n    //     }\n\n    //     if(error) {\n    //         setAlert(error, 'danger');\n    //         clearErrors();\n    //     }\n\n    //     //eslint-disable-next-line\n    // }, [error, isAuthenticated, props.history])\n\n    const [ members, setMember ] = useState({\n        name: '',\n        email: '',\n        password: '',\n        password2: ''\n    });\n\n    // const id = this.props.match.params.id;\n    // const token = this.props.match.params.token;\n    // console.log(\"this id\", id)\n    let token = props.location.search.split('&')[0].split(\"=\")[1];\n    let id = props.location.search.split('&')[1].split(\"=\")[1];\n    console.log(\"this id\", id)\n    console.log(\"this token\", token)\n\n    const { password, password2 } = members;\n\n    const onChange = e => setMember({ ...members, [e.target.name]: e.target.value }); \n\n    const onSubmit = e => {\n        e.preventDefault();\n        if (password !== password2) {\n            setAlert('Die Passworteingaben stimmen nicht übereinander', 'dark');\n        } else {\n            const data = { id, token, password }\n            newPassword({\n                data\n            });\n            setAlert('Du hast dein Passwort erfolgreich zurückgesetzt', 'dark');\n            history.push(\"/login\");\n        }\n    }\n\n    return (\n        <div className='form-container'>\n            <h1 className='text-dark x-large'>\n                Neues Passwort eingeben:\n            </h1>\n            <form onSubmit={onSubmit}>\n                <div className='form-group'>\n                    <label htmlFor='password'>Passwort (Mindestens 8 Zeichen inklusive Groß- und Kleinbuchstaben, Zahlen und Sonderzeichen)</label>\n                    <input type='password' name='password' value={password} onChange={onChange} />\n                </div>\n                <div className='form-group'>\n                    <label htmlFor='password2'>Passwort bestätigen</label>\n                    <input type='password' name='password2' value={password2} onChange={onChange} />\n                </div>\n                <input type=\"submit\" value=\"Passwort speichern\" className=\"btn btn-dark btn-block\"/>\n            </form>\n        </div>\n    )\n}\n\nexport default NewPassword;","import React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport AuthContext from '../../context/auth/authContext';\n\nconst PrivateRoute = ({ component: Component, ...rest  }) => {\n    const authContext = useContext(AuthContext);\n    const { isAuthenticated, loading } = authContext;\n\n    return (\n        <Route\n            {...rest}\n            render={props =>\n            !isAuthenticated && !loading ? (\n                <Redirect to='/login' />\n            ) : (\n                <Component {...props} />\n            )\n            }\n        /> \n    )\n}\n\nexport default PrivateRoute;","export const GET_TRAININGGROUPS = 'GET_TRAININGGROUPS';\nexport const ADD_TRAININGGROUP = 'ADD_TRAININGGROUP';\nexport const UPDATE_TRAININGGROUP = 'UPDATE_TRAININGGROUP';\nexport const FILTER_TRAININGGROUPS = 'FILTER_TRAININGGROUPS';\nexport const CLEAR_TRAININGGROUPS = 'CLEAR_TRAININGGROUPS';\nexport const DELETE_TRAININGGROUP = 'DELETE_TRAININGGROUP';\n\nexport const GET_MEMBERS = 'GET_MEMBERS';\nexport const ADD_MEMBER = 'ADD_MEMBER';\nexport const UPDATE_MEMBER = 'UPDATE_MEMBER';\nexport const FILTER_MEMBERS = 'FILTER_MEMBERS';\nexport const CLEAR_MEMBERS = 'CLEAR_MEMBERS';\nexport const DELETE_MEMBER = 'DELETE_MEMBER';\n\nexport const GET_TRAININGSESSIONS = 'GET_TRAININGSESSIONS';\nexport const ADD_TRAININGSESSION = 'ADD_TRAININGSESSION';\nexport const UPDATE_TRAININGSESSION = 'UPDATE_TRAININGSESSION';\nexport const FILTER_TRAININGSESSIONS = 'FILTER_TRAININGSESSIONS';\nexport const CLEAR_TRAININGSESSIONS = 'CLEAR_TRAININGSESSIONS';\nexport const DELETE_TRAININGSESSION = 'DELETE_TRAININGSESSION';\n\nexport const SET_CURRENT = 'SET_CURRENT';\nexport const TRAININGSESSION_ERROR = 'TRAININGSESSION_ERROR';\nexport const TRAININGGROUP_ERROR = 'TRAININGGROUP_ERROR';\nexport const MEMBER_ERROR = 'MEMBER_ERROR';\nexport const CLEAR_CURRENT = 'CLEAR_CURRENT';\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\n\nexport const CLEAR_FILTER = 'CLEAR_FILTER';\nexport const SET_ALERT = 'SET_ALERT';\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\n\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS_ALERT';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\nexport const RESET_PASSWORD = 'RESET_PASSWORD';\nexport const NEW_PASSWORD = 'NEW_PASSWORD';\nexport const MEMBER_LOADED = 'MEMBER_LOADED';\nexport const AUTH_ERROR = 'AUTH_ERROR';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const LOGOUT = 'LOGOUT';\n","import {\n    GET_TRAININGGROUPS,\n    ADD_TRAININGGROUP,\n    DELETE_TRAININGGROUP,\n    TRAININGGROUP_ERROR,\n    SET_CURRENT,\n    CLEAR_CURRENT,\n    UPDATE_TRAININGGROUP,\n    FILTER_TRAININGGROUPS,\n    CLEAR_FILTER,\n    CLEAR_TRAININGGROUPS\n} from '../types';\n\nexport default (state, action) => {\n    switch (action.type) {\n        case GET_TRAININGGROUPS:\n            return {\n                ...state,\n                trainingGroup: action.payload,\n                loading: false\n            };\n        case ADD_TRAININGGROUP:\n            return {\n                ...state,\n                trainingGroup: [action.payload, ...state.trainingGroup],\n                loading: false\n            };\n        case UPDATE_TRAININGGROUP:\n            return {\n                ...state,\n                trainingGroup: state.trainingGroup.map(group => group._id === action.payload._id ? action.payload : group),\n                loading: false\n            };\n        case DELETE_TRAININGGROUP:\n            return {\n                ...state,\n                trainingGroup: state.trainingGroup.filter(\n                (group) => group._id !== action.payload\n                ),\n                loading: false\n            };\n        case CLEAR_TRAININGGROUPS:\n            return {\n                ...state,\n                trainingGroup: null,\n                filtered: null,\n                error: null,\n                current: null\n            };\n        case SET_CURRENT:\n            return {\n                ...state,\n                current: action.payload\n            };\n        case CLEAR_CURRENT:\n            return {\n                ...state,\n                current: null\n            };\n        case FILTER_TRAININGGROUPS:\n            return {\n                ...state,\n                filtered: state.trainingGroup.filter(group => {\n                    const regex = new RegExp(`${action.payload}`, `gi`);\n                    return group.trainingGroup.match(regex);\n                })\n            };\n        case CLEAR_FILTER:\n            return {\n            ...state,\n            filtered: null\n            };\n        case TRAININGGROUP_ERROR:\n            return {\n                ...state,\n                error: action.payload\n            }\n        default:\n            return state;\n    }\n}","import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport TrainingGroupContext from './trainingGroupContext';\nimport trainingGroupReducer from './trainingGroupReducer';\nimport {\n    GET_TRAININGGROUPS,\n    ADD_TRAININGGROUP,\n    DELETE_TRAININGGROUP,\n    TRAININGGROUP_ERROR,\n    SET_CURRENT,\n    CLEAR_CURRENT,\n    UPDATE_TRAININGGROUP,\n    FILTER_TRAININGGROUPS,\n    CLEAR_TRAININGGROUPS,\n    CLEAR_FILTER\n} from '../types';\n\nconst TrainingGroupState = props => {\n    const initialState = {\n        trainingGroup: null,\n        current: null,\n        filtered: null,\n        error: null \n    };\n\n    const [state, dispatch] = useReducer(trainingGroupReducer, initialState);\n\n    // Get TrainingGroups\n    const getTrainingGroups = async () => {\n        try {\n            const res = await axios.get('/api/training-group');\n            dispatch({\n                type: GET_TRAININGGROUPS,\n                payload: res.data\n            });\n        } catch (err) {\n            dispatch({\n                type: TRAININGGROUP_ERROR,\n                payload: err.response.msg\n            })\n\n        }\n    };\n\n\n    // Add TrainingGroup\n    const addTrainingGroup = async trainingGroup => {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        try {\n            const res = await axios.post('/api/training-group', trainingGroup, config);\n            \n            dispatch({\n                type: ADD_TRAININGGROUP,\n                payload: res.data \n            });\n        } catch (err) {\n            dispatch({\n                type: TRAININGGROUP_ERROR,\n                payload: err.response.msg\n            })\n            \n        }\n    };\n\n    // Delete TrainingGroup\n    const deleteTrainingGroup = async id => {\n        try {\n            await axios.delete(`/api/training-group/${id}`);\n\n            dispatch({\n                type: DELETE_TRAININGGROUP,\n                payload: id\n            });\n        } catch (err) {\n            dispatch({\n                type: TRAININGGROUP_ERROR,\n                payload: err.response.msg\n            })\n\n        }\n\n    };\n\n    // Update TrainingGroup\n    const updateTrainingGroup = async trainingGroup => {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        try {\n            const res = await axios.put(`/api/training-group/${trainingGroup._id}`, trainingGroup, config);\n\n            dispatch({\n                type: UPDATE_TRAININGGROUP,\n                payload: res.data\n            });\n        } catch (error) {\n            dispatch({\n                type: TRAININGGROUP_ERROR,\n                payload: error.response.msg\n            })\n\n        }\n    };\n\n    // Clear TrainingGroups\n    const clearTrainingGroups = () => {\n        dispatch({ type: CLEAR_TRAININGGROUPS });\n    }\n\n    // Set Current \n     const setCurrent = trainingGroup => {\n       dispatch({ type: SET_CURRENT, payload: trainingGroup });\n     };\n   \n    // Clear Current TrainingGroup\n     const clearCurrent = () => {\n       dispatch({ type: CLEAR_CURRENT });\n     };\n   \n    // Filter TrainingGroups\n    const filterTrainingGroups = (text) => {\n        dispatch({ type: FILTER_TRAININGGROUPS, payload: text });\n    };\n\n\n    // Clear Filter\n    const clearFilter = () => {\n        dispatch({ type: CLEAR_FILTER });\n    };\n\n\n    return(\n        <TrainingGroupContext.Provider\n            value = {{\n                trainingGroup: state.trainingGroup,\n                current: state.current,\n                filtered: state.filtered,\n                error: state.error,\n                addTrainingGroup,\n                deleteTrainingGroup,\n                setCurrent,\n                clearCurrent,\n                updateTrainingGroup,\n                filterTrainingGroups,\n                clearFilter,\n                getTrainingGroups,\n                clearTrainingGroups\n            }}>\n            { props.children }\n        </TrainingGroupContext.Provider>\n    )\n};\n\nexport default TrainingGroupState;","import {\n    GET_TRAININGSESSIONS,\n    ADD_TRAININGSESSION,\n    DELETE_TRAININGSESSION,\n    TRAININGSESSION_ERROR,\n    SET_CURRENT,\n    CLEAR_CURRENT,\n    UPDATE_TRAININGSESSION,\n    FILTER_TRAININGSESSIONS,\n    CLEAR_FILTER,\n    CLEAR_TRAININGSESSIONS\n} from '../types';\n\nexport default (state, action) => {\n    switch (action.type) {\n        case GET_TRAININGSESSIONS:\n            return {\n                ...state,\n                trainingSessions: action.payload,\n                loading: false\n            };\n        case ADD_TRAININGSESSION:\n            return {\n                ...state,\n                trainingSessions: [action.payload, ...state.trainingSessions],\n                loading: false\n            };\n        case UPDATE_TRAININGSESSION:\n            return {\n                ...state,\n                trainingSessions: state.trainingSessions.map(session => session._id === action.payload._id ? action.payload : session),\n                loading: false\n            };\n        case DELETE_TRAININGSESSION:\n            return {\n                ...state,\n                trainingSessions: state.trainingSessions.filter(\n                    (session) => session._id !== action.payload\n                ),\n                loading: false\n            };\n        case CLEAR_TRAININGSESSIONS:\n            return {\n                ...state,\n                trainingSessions: null,\n                filtered: null,\n                error: null,\n                current: null\n            };\n        case SET_CURRENT:\n            return {\n                ...state,\n                current: action.payload\n            };\n        case CLEAR_CURRENT:\n            return {\n                ...state,\n                current: null\n            };\n        case FILTER_TRAININGSESSIONS:\n            return {\n                ...state,\n                filtered: state.trainingSessions.filter(session => {\n                    const regexSession = new RegExp(`${action.payload}`, `gi`);\n                    return session.description.match(regexSession) || session.date.match(regexSession);\n                })\n            };\n        case CLEAR_FILTER:\n            return {\n                ...state,\n                filtered: null\n            };\n        case TRAININGSESSION_ERROR:\n            return {\n                ...state,\n                error: action.payload\n            }\n        default:\n            return state;\n    }\n}","import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport TrainingSessionContext from './trainingSessionContext';\nimport trainingSessionReducer from './trainingSessionReducer';\nimport {\n    GET_TRAININGSESSIONS,\n    ADD_TRAININGSESSION,\n    DELETE_TRAININGSESSION,\n    TRAININGSESSION_ERROR,\n    SET_CURRENT,\n    CLEAR_CURRENT,\n    UPDATE_TRAININGSESSION,\n    FILTER_TRAININGSESSIONS,\n    CLEAR_TRAININGSESSIONS,\n    CLEAR_FILTER\n} from '../types';\n\nconst TrainingSessionState = props => {\n    const initialState = {\n        trainingSessions: null,\n        current: null,\n        filtered: null,\n        error: null \n    };\n\n    const [state, dispatch] = useReducer(trainingSessionReducer, initialState);\n\n    // Get TrainingSessions\n    const getTrainingSessions = async () => {\n        try {\n            const res = await axios.get('/api/training-session');\n\n            console.log(\"sessions\", res.data);\n            \n            dispatch({\n                type: GET_TRAININGSESSIONS,\n                payload: res.data\n            });\n        } catch (err) {\n            dispatch({\n                type: TRAININGSESSION_ERROR,\n                //payload: err.response.msg\n            })\n\n        }\n    };\n\n\n    // Add Training Session\n    const addTrainingSession = async trainingSession => {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        try {\n            const res = await axios.post('/api/training-session', trainingSession, config);\n            \n            dispatch({\n                type: ADD_TRAININGSESSION,\n                payload: res.data \n            });\n        } catch (err) {\n            dispatch({\n                type: TRAININGSESSION_ERROR,\n                payload: err.response.msg\n            })\n            \n        }\n    };\n\n    // Delete TrainingSession\n    const deleteTrainingSession = async id => {\n        try {\n            await axios.delete(`/api/training-session/${id}`);\n\n            dispatch({\n                type: DELETE_TRAININGSESSION,\n                payload: id\n            });\n        } catch (err) {\n            dispatch({\n                type: TRAININGSESSION_ERROR,\n                payload: err.response.msg\n            })\n\n        }\n\n    };\n\n    // Update TrainingSession\n    const updateTrainingSession = async trainingSession => {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        try {\n            const res = await axios.put(`/api/training-session/${trainingSession._id}`, trainingSession, config);\n\n            dispatch({\n                type: UPDATE_TRAININGSESSION,\n                payload: res.data\n            });\n        } catch (err) {\n            dispatch({\n                type: TRAININGSESSION_ERROR,\n                //payload: err.response.msg\n            })\n\n        }\n    };\n\n    // Clear TrainingSession\n    const clearTrainingSessions = () => {\n        dispatch({ type: CLEAR_TRAININGSESSIONS });\n    }\n\n    // Set Current \n     const setCurrent = trainingSession => {\n       dispatch({ type: SET_CURRENT, payload: trainingSession });\n     };\n   \n    // Clear Current TrainingSession\n     const clearCurrent = () => {\n       dispatch({ type: CLEAR_CURRENT });\n     };\n   \n    // Filter TrainingSessions\n    const filterTrainingSessions = (text) => {\n        dispatch({ type: FILTER_TRAININGSESSIONS, payload: text });\n    };\n\n\n    // Clear Filter\n    const clearFilter = () => {\n        dispatch({ type: CLEAR_FILTER });\n    };\n\n\n    return(\n        <TrainingSessionContext.Provider\n            value = {{\n                trainingSessions: state.trainingSessions,\n                current: state.current,\n                filtered: state.filtered,\n                error: state.error,\n                addTrainingSession,\n                deleteTrainingSession,\n                setCurrent,\n                clearCurrent,\n                updateTrainingSession,\n                filterTrainingSessions,\n                clearFilter,\n                getTrainingSessions,\n                clearTrainingSessions\n            }}>\n            { props.children }\n        </TrainingSessionContext.Provider>\n    )\n};\n\nexport default TrainingSessionState;","import {\n    GET_MEMBERS,\n    ADD_MEMBER,\n    DELETE_MEMBER,\n    MEMBER_ERROR,\n    SET_CURRENT,\n    CLEAR_CURRENT,\n    UPDATE_MEMBER,\n    FILTER_MEMBERS,\n    CLEAR_FILTER,\n    CLEAR_MEMBERS\n} from '../types';\n\nexport default (state, action) => {\n    switch (action.type) {\n        case GET_MEMBERS:\n            return {\n                ...state,\n                members: action.payload,\n                loading: false\n            };\n        case ADD_MEMBER:\n            return {\n                ...state,\n                members: [action.payload, ...state.members],\n                loading: false\n            };\n        case UPDATE_MEMBER:\n            return {\n                ...state,\n                members: state.members.map(session => session._id === action.payload._id ? action.payload : session),\n                loading: false\n            };\n        case DELETE_MEMBER:\n            return {\n                ...state,\n                members: state.members.filter(\n                (session) => session._id !== action.payload\n                ),\n                loading: false\n            };\n        case CLEAR_MEMBERS:\n            return {\n                ...state,\n                members: null,\n                filtered: null,\n                error: null,\n                current: null\n            };\n        case SET_CURRENT:\n            return {\n                ...state,\n                current: action.payload\n            };\n        case CLEAR_CURRENT:\n            return {\n                ...state,\n                current: null\n            };\n        case FILTER_MEMBERS:\n            return {\n                ...state,\n                filtered: state.members.filter(member => {\n                    const regexMember = new RegExp(`${action.payload}`, `gi`);\n                    return member.name.match(regexMember);\n                })\n            };\n        case CLEAR_FILTER:\n            return {\n            ...state,\n            filtered: null\n            };\n        case MEMBER_ERROR:\n            return {\n                ...state,\n                error: action.payload\n            }\n        default:\n            return state;\n    }\n}","import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport MemberContext from './memberContext';\nimport memberReducer from './memberReducer';\nimport {\n    GET_MEMBERS,\n    ADD_MEMBER,\n    DELETE_MEMBER,\n    MEMBER_ERROR,\n    SET_CURRENT,\n    CLEAR_CURRENT,\n    UPDATE_MEMBER,\n    FILTER_MEMBERS,\n    CLEAR_MEMBERS,\n    CLEAR_FILTER\n} from '../types';\n\nconst MemberState = props => {\n    const initialState = {\n        members: null,\n        current: null,\n        filtered: null,\n        error: null\n    };\n\n    const [state, dispatch] = useReducer(memberReducer, initialState);\n\n    // Get Members\n    const getMembers = async () => {\n        try {\n            const res = await axios.get('/api/member');\n            dispatch({\n                type: GET_MEMBERS,\n                payload: res.data\n            });\n        } catch (err) {\n            dispatch({\n                type: MEMBER_ERROR,\n                payload: err.response.msg\n            })\n        }\n    };\n\n\n    // Add Member\n    const addMember = async member => {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        try {\n            const res = await axios.post('/api/member', member, config);\n            console.log(res.data);\n            dispatch({\n                type: ADD_MEMBER,\n                payload: res.data\n            });\n        } catch (error) {\n            dispatch({\n                type: MEMBER_ERROR,\n                payload: error.response.msg\n            })\n\n        }\n    };\n\n    // Delete Member\n    const deleteMember = async id => {\n        try {\n            await axios.delete(`/api/member/${id}`);\n\n            dispatch({\n                type: DELETE_MEMBER,\n                payload: id\n            });\n        } catch (err) {\n            dispatch({\n                type: MEMBER_ERROR,\n                payload: err.response.msg\n            })\n\n        }\n\n    };\n\n    // Update Member\n    const updateMember = async member => {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        try {\n            const res = await axios.put(`/api/member/${member._id}`, member, config);\n\n            dispatch({\n                type: UPDATE_MEMBER,\n                payload: res.data\n            });\n        } catch (err) {\n            dispatch({\n                type: MEMBER_ERROR,\n                payload: err.response.msg\n            })\n\n        }\n    };\n\n    // Clear Member\n    const clearMembers = () => {\n        dispatch({ type: CLEAR_MEMBERS });\n    }\n\n    // Set Current \n    const setCurrent = member => {\n        console.log(member);\n        dispatch({ type: SET_CURRENT, payload: member });\n    };\n\n    // Clear Current Member\n    const clearCurrent = () => {\n        dispatch({ type: CLEAR_CURRENT });\n    };\n\n    // Filter Members\n    const filterMembers = (text) => {\n        dispatch({ type: FILTER_MEMBERS, payload: text });\n    };\n\n\n    // Clear Filter\n    const clearFilter = () => {\n        dispatch({ type: CLEAR_FILTER });\n    };\n\n\n    return (\n        <MemberContext.Provider\n            value={{\n                members: state.members,\n                current: state.current,\n                filtered: state.filtered,\n                error: state.error,\n                addMember,\n                deleteMember,\n                setCurrent,\n                clearCurrent,\n                updateMember,\n                filterMembers,\n                clearFilter,\n                getMembers,\n                clearMembers\n            }}>\n            {props.children}\n        </MemberContext.Provider>\n    )\n};\n\nexport default MemberState;","import {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    MEMBER_LOADED,\n    AUTH_ERROR,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT,\n    RESET_PASSWORD,\n    CLEAR_ERRORS,\n    NEW_PASSWORD,\n} from '../types';\n\nexport default(state, action) => {\n    switch(action.type) {\n        case MEMBER_LOADED:\n            return {\n                ...state,\n                isAuthenticated: true,\n                loading: false,\n                member: action.payload,\n                role: action.payload.role\n            }\n        case REGISTER_SUCCESS:\n        case RESET_PASSWORD:\n        case NEW_PASSWORD:\n        case LOGIN_SUCCESS:\n            localStorage.setItem('token', action.payload.token);\n            return {\n                ...state,   \n                ...action.payload,\n                isAuthenticated: true,\n                loading: false\n            };\n        case REGISTER_FAIL:\n        case AUTH_ERROR:\n        case LOGIN_FAIL:\n        case LOGOUT:\n            localStorage.removeItem('token');\n            console.log(action.payload);\n            return {\n                ...state,\n                token: null,\n                isAuthenticated: null,\n                loading: false,\n                member: null,\n                role: null,\n                error: action.payload\n            };\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n        default:\n            return state;\n    }\n}","import axios from 'axios';\n\nconst setAuthToken = token => {\n    if(token) {\n        axios.defaults.headers.common['x-auth-token'] = token;\n    } else {\n        delete axios.defaults.headers.common['x-auth-token'];\n    }\n}\n\nexport default setAuthToken;","import React, { useReducer } from 'react';\nimport axios from 'axios';\nimport AuthContext from './authContext';\nimport authReducer from './authReducer';\nimport setAuthToken from '../../utils/setAuthToken'\nimport {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    RESET_PASSWORD,\n    NEW_PASSWORD,\n    MEMBER_LOADED,\n    AUTH_ERROR,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT,\n    CLEAR_ERRORS\n} from '../types';\n\nconst AuthState = props => {\n    const initialState = {\n        token: localStorage.getItem('token'),\n        isAuthenticated: null,\n        loading: true,\n        member: null,\n        role: null,\n        error: null\n    };\n\n    const [state, dispatch]  = useReducer(authReducer, initialState);\n\n    // load Member\n    const loadMember = async() => {\n        if(localStorage.token) {\n            setAuthToken(localStorage.token);\n        }\n\n        try {\n            const res = await axios.get('/api/auth');\n            dispatch({\n                type: MEMBER_LOADED,\n                payload: res.data\n            })\n        } catch (error) {\n            console.log(error);\n            dispatch({\n                type: AUTH_ERROR\n            })\n        }\n    };\n\n    // Register user\n    const register = async formData => {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        };   \n            \n        try {\n            const res = await axios.post('/api/member', formData, config);\n            dispatch({\n                type: REGISTER_SUCCESS,\n                payload: res.data\n            });\n\n            loadMember();\n        } catch (error) {\n            console.log(error.response.data.msg);\n            dispatch({\n                type: REGISTER_FAIL,\n                payload: error.response.data.msg\n            })\n        }\n    }\n\n\n    // Login Member\n    const login = async formData => {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        };   \n            \n        try {\n            const res = await axios.post('/api/auth', formData, config);\n            dispatch({\n                type: LOGIN_SUCCESS,\n                payload: res.data\n            });\n\n            loadMember();\n        } catch (error) {\n            console.log(error.response.data.msg);\n            dispatch({\n                type: LOGIN_FAIL,\n                payload: error.response.data.msg\n            })\n        }\n    }\n\n    //reset Password\n    const resetPassword = async (email) => {   \n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        };\n\n        email.url = window.location.origin;\n                     \n        try {\n            const res = await axios.post('/api/auth/request-password-reset', email, config);\n            console.log(\"result\", res)\n            dispatch({\n                type: RESET_PASSWORD,\n                payload: res.data\n            })\n        } catch (error) {\n            console.log(error.response.data.msg);\n            dispatch({\n                type: REGISTER_FAIL,\n                payload: error.response.data.msg\n            })\n        }\n    }\n\n    // set new password\n    const newPassword = async (data) => {   \n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        };\n        console.log(\"data in state\", data)\n        try {\n            const res = await axios.post('/api/auth/reset-password', data, config);\n            console.log(\"result\", res)\n            dispatch({\n                type: NEW_PASSWORD,\n                payload: res.data\n            })\n        } catch (error) {\n            console.log(error.response.data.msg);\n            dispatch({\n                type: REGISTER_FAIL,\n                payload: error.response.data.msg\n            })\n        }\n    }\n\n\n    // Logout\n    const logout = () => dispatch({ type: LOGOUT});\n\n    // Clear Errors\n    const clearErrors = () => dispatch({ type: CLEAR_ERRORS });\n\n\n    return (\n        <AuthContext.Provider\n            value={{\n                token: state.token,\n                isAuthenticated: state.isAuthenticated,\n                loading: state.loading,\n                member: state.member,\n                role: state.role,\n                error: state.error,\n                register,\n                loadMember,\n                login,\n                logout,\n                clearErrors,\n                resetPassword,\n                newPassword\n            }}>\n            {props.children}\n        </AuthContext.Provider>\n    )\n};\n\nexport default AuthState;","import { SET_ALERT, REMOVE_ALERT } from '../types';\n\nexport default (state, action) => {\n    switch (action.type) {\n         case SET_ALERT:\n             return [...state, action.payload]; \n         case REMOVE_ALERT:\n             return state.filter(alert => alert.id !== action.payload);\n         default:\n             return state;\n    }\n}","import React, { useReducer } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport AlertContext from './alertContext';\nimport alertReducer from './alertReducer';\nimport {\n    SET_ALERT,\n    REMOVE_ALERT\n} from '../types';\n\nconst AlertState = props => {\n    const initialState = [];\n\n    const [state, dispatch] = useReducer(alertReducer, initialState);\n\n    // Set Alert\n    const setAlert = (msg, type, timeout = 2000) => {\n        const id = uuid.v4;\n        dispatch({\n            type: SET_ALERT,\n            payload: { msg, type, id }\n        });\n\n        setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout);  \n    }\n\n\n    return (\n        <AlertContext.Provider\n            value={{\n                alerts: state,\n                setAlert\n            }}>\n            {props.children}\n        </AlertContext.Provider>\n    )\n};\n\nexport default AlertState;","import React, { Fragment, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n// import { BrowserRouter } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Home from './components/pages/Home';\nimport Messages from './components/pages/Messages';\nimport MemberPage from './components/pages/MemberPage';\nimport Groups from './components/pages/Groups';\nimport Sessions from './components/pages/Sessions';\nimport OldSessions from './components/trainingSessions/OldSessions';\n// import PrivacyPolicy from './components/auth/PrivacyPolicy';\nimport About from './components/pages/About';\nimport Register from './components/auth/Register';\nimport Login from './components/auth/Login';\nimport Alerts from './components/layout/Alerts';\nimport TrainingGroupListModal from './components/member/TrainingGroupListModal';\nimport ClearModalMember from './components/member/ClearModalMember';\nimport ClearModalGroup from './components/trainingGroups/ClearModalGroup';\nimport ClearModalSession from './components/trainingSessions/ClearModalSession';\nimport ResetPassword from './components/auth/ResetPassword';\nimport NewPassword from './components/auth/NewPassword';\n\nimport PrivatRoute from './components/routing/PrivateRoute';\n\nimport 'materialize-css/dist/css/materialize.min.css';\nimport M from 'materialize-css/dist/js/materialize.min.js';\n\nimport TrainingGroupState from './context/trainingGroup/TrainingGroupState';\nimport TrainingSessionState from './context/trainingSession/TrainingSessionState';\nimport MemberState from './context/member/MemberState';\nimport AuthState from './context/auth/AuthState';\nimport AlertState from './context/alert/AlertState';\nimport setAuthToken from './utils/setAuthToken';\nimport './App.css';\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token);\n}\n\nconst App = () => {\n  // const [shouldRefresh, setShouldRefresh] = useState(false);\n  useEffect(() => {\n    // Initializes Materialize JS\n    M.AutoInit();\n    // const id = setTimeout(\n    //   () => setShouldRefresh(true), \n    //   1000 * 60 * 60 * 6 // 6 hours in milliseconds\n    // );\n    // return () => clearTimeout(id);\n  });\n\n  return (\n    // <BrowserRouter forceRefresh={shouldRefresh}>\n      <AuthState>\n        <TrainingGroupState>\n          <TrainingSessionState>\n            <MemberState>\n              <AlertState>\n                <Router>\n                  <Fragment >\n                    <Navbar />\n                    <div className=\"container top\">\n                      <Alerts />\n                      <Switch>\n                        < PrivatRoute exact path=\"/\" component={Home} />\n                        < Route exact path=\"/about\" component={About} />\n                        {/* < Route exact path=\"/policy\" component={PrivacyPolicy} /> */}\n                        < PrivatRoute exact path=\"/sessions\" component={Sessions} />\n                        < PrivatRoute exact path=\"/messages\" component={Messages} />\n                        < PrivatRoute exact path=\"/memberPage\" component={MemberPage} />\n                        < PrivatRoute exact path=\"/groups\" component={Groups} />\n                        < PrivatRoute exact path=\"/oldSess\" component={OldSessions} />\n                        < Route exact path=\"/register\" component={Register} />\n                        < Route exact path=\"/login\" component={Login} />\n                        < Route exact path=\"/resetPassword\" component={ResetPassword} />\n                        < Route path=\"/newPassword\" component={NewPassword} />\n                      </Switch>\n                    </div>\n                    <TrainingGroupListModal />\n                    <ClearModalMember />\n                    <ClearModalGroup />\n                    <ClearModalSession />\n                  </Fragment>\n                </Router>\n              </AlertState>\n            </MemberState>\n          </TrainingSessionState>\n        </TrainingGroupState>\n      </AuthState>\n    // </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if ('serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swFileName = process.env.NODE_ENV === 'production'\n        ? 'service-worker.js'\n        : 'custom-sw.js'\n      const swUrl = `${process.env.PUBLIC_URL}/${swFileName}`;\n      console.log(\"localhost\", isLocalhost);\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n        \n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n        console.log(\"localhost\", isLocalhost);\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { registerServiceWorker } from \"./register-sw\";\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();"],"sourceRoot":""}